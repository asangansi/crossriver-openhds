
package org.openhds.domain.model;

import java.io.Serializable;
import java.util.Calendar;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.Past;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.openhds.domain.annotations.Description;
import org.openhds.domain.constraint.CheckCalendar;
import org.openhds.domain.constraint.CheckEntityNotVoided;
import org.openhds.domain.constraint.CheckIndividualNotUnknown;
import org.openhds.domain.constraint.ExtensionIntegerConstraint;
import org.openhds.domain.constraint.Searchable;


/**
 * Generated by JCodeModel
 * 
 */
@Description(description = "Standard Verbal Autopsy Questionnaire for Neonatal Deaths (0-27 days old)")
@Entity
@Table(name = "neonatalvpm")
@XmlRootElement(name = "neonatalvpm")
public class NeoNatalVPM
    extends VisitableEntity
    implements Serializable
{

    public final static long serialVersionUID = 5627673295092064030L;
    @Searchable
    @CheckEntityNotVoided
    @CheckIndividualNotUnknown
    @ManyToOne(cascade = {
        CascadeType.ALL
    })
    @Description(description = "Individual who deceased, identified by the external id.")
    private Individual individual;
    @Searchable
    @ManyToOne
    @Description(description = "Location of the deceased individual.")
    private Location house;
    @Past(message = "Death date should be in the past")
    @CheckCalendar(message = "Child Death Date is invalid")
    @Temporal(TemporalType.DATE)
    @Description(description = "Date of the Death.")
    private Calendar childDeathDate;
    @Description(description = "How many months was the mother pregnant with the child")
    private Integer numMonthsPregnant;
    @Description(description = "Did the child receive care from a pharmacy")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for receivedCareFromPharmacy", allowNull = true)
    private Integer receivedCareFromPharmacy;
    @Description(description = "Was the child's body cold during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for bodyColdToTouch", allowNull = true)
    private Integer bodyColdToTouch;
    @Description(description = "Did the child have any difficulty breathing during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveDifficultyBreathing", allowNull = true)
    private Integer haveDifficultyBreathing;
    @Description(description = "What kind of injury or accident")
    @ExtensionIntegerConstraint(constraint = "accidentTypeConstraint", message = "Invalid Value for accidentType", allowNull = true)
    private Integer accidentType;
    @Description(description = "How many days old was the child when he/she became ill")
    private Integer daysOldWhenChildBecameIll;
    @Description(description = "During the diarrhoea episode, was the child given any fluids such as ORS")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for givenFluids", allowNull = true)
    private Integer givenFluids;
    @Description(description = "When symptom 3 ended")
    private Integer symptom3End;
    @Description(description = "Explanation the malformation at birth")
    private String malformationExplanation;
    @Description(description = "Explanation about the illness that led to the baby's death")
    private String aboutIllness;
    @Description(description = "Did the child receive care from a hospital")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for receivedCareFromHospital", allowNull = true)
    private Integer receivedCareFromHospital;
    @Description(description = "Did the mother have a difficult labour")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for haveDifficultLabour", allowNull = true)
    private Integer haveDifficultLabour;
    @Description(description = "Did the child have redness around or drainage from the umbilical cord stump during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveRednessUmbilicalCord", allowNull = true)
    private Integer haveRednessUmbilicalCord;
    @Description(description = "Was care sought outside the home while the child had the illness")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for receivedCareOutsideHome", allowNull = true)
    private Integer receivedCareOutsideHome;
    @Description(description = "Did the child have a fever during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveFever", allowNull = true)
    private Integer haveFever;
    @Description(description = "Did the child receive care from a community base practitioner")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for receivedCareFromCHO", allowNull = true)
    private Integer receivedCareFromCHO;
    @Description(description = "Was was used in cutting the umbilical cord")
    @ExtensionIntegerConstraint(constraint = "umbilicalCordConstraint", message = "Invalid Value for umbilicalCord", allowNull = true)
    private Integer umbilicalCord;
    @Description(description = "Symptom 5 reported by interviewer")
    private String symptom5;
    @Description(description = "Did the individual suffer from other illnesses")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for dieFromInjuryOrAccident", allowNull = true)
    private Integer dieFromInjuryOrAccident;
    @Description(description = "Symptom 4 reported by interviewer")
    private String symptom4;
    @Description(description = "Did the child receive care from a drug seller")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for receivedCareFromDrugSeller", allowNull = true)
    private Integer receivedCareFromDrugSeller;
    @Description(description = "Symptom 3 reported by interviewer")
    private String symptom3;
    @Description(description = "Symptom 2 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom2Severity", allowNull = true)
    private Integer symptom2Severity;
    @Description(description = "Symptom 2 reported by interviewer")
    private String symptom2;
    @Description(description = "Symptom 1 reported by interviewer")
    private String symptom1;
    @Description(description = "Did the individual die where the accident occurred")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for diedAtAccident", allowNull = true)
    private Integer diedAtAccident;
    @Description(description = "Did the child have fast breathing during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveFastBreathing", allowNull = true)
    private Integer haveFastBreathing;
    @Description(description = "How is the mothers health now")
    @ExtensionIntegerConstraint(constraint = "mothersHealthNowConstraint", message = "Invalid Value for mothersHealthNow", allowNull = true)
    private Integer mothersHealthNow;
    @Description(description = "Did the child receive care from a health center")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for receivedCareFromHealthCenter", allowNull = true)
    private Integer receivedCareFromHealthCenter;
    @Description(description = "The year of birth of the mother")
    private Integer yearOfBirthOfMother;
    @Description(description = "Did the child become unresponsive or unconscious during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for wasUnresponsive", allowNull = true)
    private Integer wasUnresponsive;
    @Description(description = "Did the child have areas of skin that were hot or peeling during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for havePeelingSkin", allowNull = true)
    private Integer havePeelingSkin;
    @Description(description = "Did the child cry when born")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for didChildCry", allowNull = true)
    private Integer didChildCry;
    @Description(description = "Specify who assisted the delivery")
    private String assistedDeliveryOther;
    @Description(description = "How many doses of tetanus vaccination did the mother receive")
    private Integer receivedTetanusVaccinationDose;
    @Description(description = "Did the child have any malformation at birth")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveMalformation", allowNull = true)
    private Integer haveMalformation;
    @Description(description = "The name of the facility where the individual died")
    private String whereDiedFacilityName;
    @Description(description = "What was the size of the child at birth")
    @ExtensionIntegerConstraint(constraint = "childBirthSizeConstraint", message = "Invalid Value for childSize", allowNull = true)
    private Integer childSize;
    @Description(description = "Date of birth of child")
    @CheckCalendar(message = "Invalid value for date")
    @Temporal(TemporalType.DATE)
    @Past
    private Calendar childDob;
    @Description(description = "How many days old was the child when he/she died")
    private Integer daysOldWhenChildDied;
    @Description(description = "Did the child have a skin rash with blisters containing puss during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveSkinRash", allowNull = true)
    private Integer haveSkinRash;
    @Description(description = "How many days did the child have the fever")
    private Integer haveFeverNumDays;
    @Description(description = "Did the mother have any tetanol injections during the pregnancy")
    @ExtensionIntegerConstraint(constraint = "yesNoConstraint", message = "Invalid Value for haveTetanolInjections", allowNull = true)
    private Integer haveTetanolInjections;
    @Description(description = "Did the child bleed from any part of the body during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for bleedFromBody", allowNull = true)
    private Integer bleedFromBody;
    @Description(description = "Did the child have the fever throughout the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveFeverThroughIllness", allowNull = true)
    private Integer haveFeverThroughIllness;
    @Description(description = "Did the child have any swelling of the abdomen during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveSwelling", allowNull = true)
    private Integer haveSwelling;
    @Description(description = "Specify where the child was born")
    private String deliveryLocationOther;
    @Description(description = "Was there visible blood in the stools")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveBloodInStools", allowNull = true)
    private Integer haveBloodInStools;
    @Description(description = "When symptom 2 ended")
    private Integer symptom2End;
    @Description(description = "Did the mother receive tetanus vaccination since reaching adulthood before the pregnancy")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for receivedTetanusVaccination", allowNull = true)
    private Integer receivedTetanusVaccination;
    @Description(description = "Specify what was applied to the umbilical after it was cut")
    private String umbilicalCordCutOther;
    @Description(description = "Did the child receive care from a private physician or nurse")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for receivedCareFromNurse", allowNull = true)
    private Integer receivedCareFromNurse;
    @Description(description = "How long did the individual survive before they died")
    @ExtensionIntegerConstraint(constraint = "survivedBeforeDeathConstraint", message = "Invalid Value for survivedBeforeDeath", allowNull = true)
    private Integer survivedBeforeDeath;
    @Description(description = "When symptom 5 started")
    private Integer symptom5Start;
    @Description(description = "What or from whom was care sought second")
    private String careSoughtSecond;
    @Description(description = "Symptom 4 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom4Severity", allowNull = true)
    private Integer symptom4Severity;
    @Description(description = "Where did the child bleed")
    private String bleedFromBodyLocation;
    @Description(description = "When symptom 1 started")
    private Integer symptom1Start;
    @Description(description = "Specify the other sources the child received care from")
    private String receivedCareFromOtherSpecify;
    @Description(description = "What was the length of time of the illness immediately preceding the child's death")
    private Integer lengthOfTimeOfIllness;
    @Description(description = "How many days were the stools more frequent or liquid")
    private Integer haveDiarrhoeaNumDays;
    @Description(description = "House name of the deceased individual")
    private String houseNameOfDeceased;
    @Description(description = "What was applied to the umbilical after it was cut")
    @ExtensionIntegerConstraint(constraint = "umbilicalCordCutConstraint", message = "Invalid Value for umbilicalCordCut", allowNull = true)
    private Integer umbilicalCordCut;
    @Description(description = "How many days did the child have difficulty breathing")
    private Integer haveDifficultyBreathingNumDays;
    @Description(description = "Did the child receive care from a religious leader")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for receivedCareFromReligiousLeader", allowNull = true)
    private Integer receivedCareFromReligiousLeader;
    @Description(description = "How many tetanol injections did the mother have")
    private Integer haveTetanolInjectionsDose;
    @Description(description = "Symptom 5 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom5Severity", allowNull = true)
    private Integer symptom5Severity;
    @Description(description = "Sex of the deceased individual")
    @ExtensionIntegerConstraint(constraint = "genderConstraint", message = "Invalid Value for sexOfDeceased", allowNull = true)
    private Integer sexOfDeceased;
    @Description(description = "How many babies were born of this pregnancy")
    private Integer numBabiesBorn;
    @Description(description = "Did the child have any difficulties feeding after the birth")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for difficultyFeedingAfterBirth", allowNull = true)
    private Integer difficultyFeedingAfterBirth;
    @Description(description = "When symptom 4 ended")
    private Integer symptom4End;
    @Description(description = "When symptom 1 ended")
    private Integer symptom1End;
    @Description(description = "Did the child receive care from relatives or friends")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for receivedCareFromRelatives", allowNull = true)
    private Integer receivedCareFromRelatives;
    @Description(description = "Did the child have yellow eyes or skin during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveYellowSkin", allowNull = true)
    private Integer haveYellowSkin;
    @Description(description = "When symptom 5 ended")
    private Integer symptom5End;
    @Description(description = "Relationship of the respondent to the deceased")
    @ExtensionIntegerConstraint(constraint = "relationshipOfRespondentConstraint", message = "Invalid Value for relationshipOfRespondent", allowNull = true)
    private Integer relationshipOfRespondent;
    @Description(description = "Date corrected on")
    @CheckCalendar(message = "Invalid value for date")
    @Temporal(TemporalType.DATE)
    @Past
    private Calendar certifiedCorrectDate;
    @Description(description = "How is the father's health now")
    @ExtensionIntegerConstraint(constraint = "mothersHealthNowConstraint", message = "Invalid Value for fathersHealthNow", allowNull = true)
    private Integer fathersHealthNow;
    @Description(description = "What other kind of injury or accident")
    private String accidentTypeOther;
    @Description(description = "Did the child have in drawing of the chest during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveDrawingChest", allowNull = true)
    private Integer haveDrawingChest;
    @Description(description = "Did the child have any difficulties crying after a period of good health")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for difficultyCrying", allowNull = true)
    private Integer difficultyCrying;
    @Description(description = "Who assisted the delivery")
    @ExtensionIntegerConstraint(constraint = "assistedDeliveryConstraint", message = "Invalid Value for assistedDelivery", allowNull = true)
    private Integer assistedDelivery;
    @Description(description = "Did the child have diarrhoea during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveDiarrhoea", allowNull = true)
    private Integer haveDiarrhoea;
    @Description(description = "Did the child have any difficulties breathing after the birth")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for difficultyBreathingAfterBirth", allowNull = true)
    private Integer difficultyBreathingAfterBirth;
    @Description(description = "Did the child have any signs of injury after the birth")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for signsOfInjury", allowNull = true)
    private Integer signsOfInjury;
    @Description(description = "Symptom 3 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom3Severity", allowNull = true)
    private Integer symptom3Severity;
    @Description(description = "Did the child have any difficulties breathing after a period of wellbeing")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for difficultyBreathingAfterPeriodWellbeing", allowNull = true)
    private Integer difficultyBreathingAfterPeriodWellbeing;
    @Description(description = "Did the child receive care from other sources")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for receivedCareFromOther", allowNull = true)
    private Integer receivedCareFromOther;
    @Description(description = "Proof of date of birth")
    @ExtensionIntegerConstraint(constraint = "sourceOfDobConstraint", message = "Invalid Value for sourceOfDob", allowNull = true)
    private Integer sourceOfDob;
    @Description(description = "How many days did the child have a cough during the illness that led to death")
    private Integer haveCoughNumDays;
    @Description(description = "Date of interview for the verbal autopsy")
    @CheckCalendar(message = "Invalid value for date")
    @Temporal(TemporalType.DATE)
    @Past
    private Calendar dateOfInterview;
    @Description(description = "When did the illness start")
    @ExtensionIntegerConstraint(constraint = "illnessStartConstraint", message = "Invalid Value for whenIllnessStarted", allowNull = true)
    private Integer whenIllnessStarted;
    @Description(description = "Did the child have any spasms or convulsions during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveSpasms", allowNull = true)
    private Integer haveSpasms;
    @Description(description = "The address of the facility where the individual died")
    private String whereDiedFacilityAddress;
    @Description(description = "When symptom 2 started")
    private Integer symptom2Start;
    @Description(description = "Did the child have bulging fontanel during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveFontanel", allowNull = true)
    private Integer haveFontanel;
    @Description(description = "Where did the individual die")
    @ExtensionIntegerConstraint(constraint = "whereDiedConstraint", message = "Invalid Value for whereDied", allowNull = true)
    private Integer whereDied;
    @Description(description = "Did the child have a cough during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveCough", allowNull = true)
    private Integer haveCough;
    @Description(description = "Did the child receive care from a traditional healer")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for receivedCareFromTraditionalHealer", allowNull = true)
    private Integer receivedCareFromTraditionalHealer;
    @Description(description = "How many days was care sought outside the home after the illness started")
    private Integer receivedCareOutsideHomeNumDays;
    @Description(description = "What or from whom was care sought third")
    private String careSoughtThird;
    @Description(description = "Symptom 1 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom1Severity", allowNull = true)
    private Integer symptom1Severity;
    @Description(description = "Specify the prrof of date of birth")
    private String sourceOfDobOther;
    @Description(description = "How many days did the child have fast breathing")
    private Integer haveFastBreathingNumDays;
    @Description(description = "When symptom 4 started")
    private Integer symptom4Start;
    @Description(description = "Name of the deceased individual")
    private String nameOfDeceased;
    @Description(description = "On the day when diarrhoea is most frequent, how many times did the child pass stools per day")
    private Integer haveDiarrhoeaNumDaysMostFrequent;
    @Description(description = "Did the child have short periods of stopping and restarting breathing during the illness that led to death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for havePeriodsOfBreathing", allowNull = true)
    private Integer havePeriodsOfBreathing;
    @Description(description = "Interviewers comments and observations")
    private String interviewersComments;
    @Description(description = "When symptom 3 started")
    private Integer symptom3Start;
    @Description(description = "How long did the child have difficulties feeding after the birth")
    private Integer difficultyFeedingAfterBirthLength;
    @Description(description = "What kind of animal bite")
    @ExtensionIntegerConstraint(constraint = "animalBiteTypeConstraint", message = "Invalid Value for animalBiteType", allowNull = true)
    private Integer animalBiteType;
    @Description(description = "Did the individual receive medical care from the accident before death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for receivedMedicalAttention", allowNull = true)
    private Integer receivedMedicalAttention;
    @Description(description = "Specify what was used in cutting the umbilical cord")
    private String umbilicalCordOther;
    @Description(description = "Corrected by")
    private String correctedBy;
    @Description(description = "Where was the child born")
    @ExtensionIntegerConstraint(constraint = "deliveryLocationConstraint", message = "Invalid Value for deliveryLocation", allowNull = true)
    private Integer deliveryLocation;
    @Description(description = "Name of the respondent of the verbal autopsy")
    private String nameOfRespondent;
    @Description(description = "Specify where the individual died")
    private String whereDiedOther;
    @Description(description = "What or from whom was care sought first")
    private String careSoughtFirst;
    @Description(description = "Specify the relationship of the respondent to the deceased")
    private String relationshipOfRespondentOther;

    public Individual getIndividual() {
        return individual;
    }

    public void setIndividual(Individual indiv) {
        individual = indiv;
    }

    public Location getHouse() {
        return house;
    }

    public void setHouse(Location location) {
        house = location;
    }

    @XmlJavaTypeAdapter(org.openhds.domain.util.CalendarAdapter.class)
    public Calendar getChildDeathDate() {
        return childDeathDate;
    }

    public void setChildDeathDate(Calendar date) {
        childDeathDate = date;
    }

    public Integer getNumMonthsPregnant() {
        return numMonthsPregnant;
    }

    public void setNumMonthsPregnant(Integer data) {
        numMonthsPregnant = data;
    }

    public Integer getReceivedCareFromPharmacy() {
        return receivedCareFromPharmacy;
    }

    public void setReceivedCareFromPharmacy(Integer data) {
        receivedCareFromPharmacy = data;
    }

    public Integer getBodyColdToTouch() {
        return bodyColdToTouch;
    }

    public void setBodyColdToTouch(Integer data) {
        bodyColdToTouch = data;
    }

    public Integer getHaveDifficultyBreathing() {
        return haveDifficultyBreathing;
    }

    public void setHaveDifficultyBreathing(Integer data) {
        haveDifficultyBreathing = data;
    }

    public Integer getAccidentType() {
        return accidentType;
    }

    public void setAccidentType(Integer data) {
        accidentType = data;
    }

    public Integer getDaysOldWhenChildBecameIll() {
        return daysOldWhenChildBecameIll;
    }

    public void setDaysOldWhenChildBecameIll(Integer data) {
        daysOldWhenChildBecameIll = data;
    }

    public Integer getGivenFluids() {
        return givenFluids;
    }

    public void setGivenFluids(Integer data) {
        givenFluids = data;
    }

    public Integer getSymptom3End() {
        return symptom3End;
    }

    public void setSymptom3End(Integer data) {
        symptom3End = data;
    }

    public String getMalformationExplanation() {
        return malformationExplanation;
    }

    public void setMalformationExplanation(String data) {
        malformationExplanation = data;
    }

    public String getAboutIllness() {
        return aboutIllness;
    }

    public void setAboutIllness(String data) {
        aboutIllness = data;
    }

    public Integer getReceivedCareFromHospital() {
        return receivedCareFromHospital;
    }

    public void setReceivedCareFromHospital(Integer data) {
        receivedCareFromHospital = data;
    }

    public Integer getHaveDifficultLabour() {
        return haveDifficultLabour;
    }

    public void setHaveDifficultLabour(Integer data) {
        haveDifficultLabour = data;
    }

    public Integer getHaveRednessUmbilicalCord() {
        return haveRednessUmbilicalCord;
    }

    public void setHaveRednessUmbilicalCord(Integer data) {
        haveRednessUmbilicalCord = data;
    }

    public Integer getReceivedCareOutsideHome() {
        return receivedCareOutsideHome;
    }

    public void setReceivedCareOutsideHome(Integer data) {
        receivedCareOutsideHome = data;
    }

    public Integer getHaveFever() {
        return haveFever;
    }

    public void setHaveFever(Integer data) {
        haveFever = data;
    }

    public Integer getReceivedCareFromCHO() {
        return receivedCareFromCHO;
    }

    public void setReceivedCareFromCHO(Integer data) {
        receivedCareFromCHO = data;
    }

    public Integer getUmbilicalCord() {
        return umbilicalCord;
    }

    public void setUmbilicalCord(Integer data) {
        umbilicalCord = data;
    }

    public String getSymptom5() {
        return symptom5;
    }

    public void setSymptom5(String data) {
        symptom5 = data;
    }

    public Integer getDieFromInjuryOrAccident() {
        return dieFromInjuryOrAccident;
    }

    public void setDieFromInjuryOrAccident(Integer data) {
        dieFromInjuryOrAccident = data;
    }

    public String getSymptom4() {
        return symptom4;
    }

    public void setSymptom4(String data) {
        symptom4 = data;
    }

    public Integer getReceivedCareFromDrugSeller() {
        return receivedCareFromDrugSeller;
    }

    public void setReceivedCareFromDrugSeller(Integer data) {
        receivedCareFromDrugSeller = data;
    }

    public String getSymptom3() {
        return symptom3;
    }

    public void setSymptom3(String data) {
        symptom3 = data;
    }

    public Integer getSymptom2Severity() {
        return symptom2Severity;
    }

    public void setSymptom2Severity(Integer data) {
        symptom2Severity = data;
    }

    public String getSymptom2() {
        return symptom2;
    }

    public void setSymptom2(String data) {
        symptom2 = data;
    }

    public String getSymptom1() {
        return symptom1;
    }

    public void setSymptom1(String data) {
        symptom1 = data;
    }

    public Integer getDiedAtAccident() {
        return diedAtAccident;
    }

    public void setDiedAtAccident(Integer data) {
        diedAtAccident = data;
    }

    public Integer getHaveFastBreathing() {
        return haveFastBreathing;
    }

    public void setHaveFastBreathing(Integer data) {
        haveFastBreathing = data;
    }

    public Integer getMothersHealthNow() {
        return mothersHealthNow;
    }

    public void setMothersHealthNow(Integer data) {
        mothersHealthNow = data;
    }

    public Integer getReceivedCareFromHealthCenter() {
        return receivedCareFromHealthCenter;
    }

    public void setReceivedCareFromHealthCenter(Integer data) {
        receivedCareFromHealthCenter = data;
    }

    public Integer getYearOfBirthOfMother() {
        return yearOfBirthOfMother;
    }

    public void setYearOfBirthOfMother(Integer data) {
        yearOfBirthOfMother = data;
    }

    public Integer getWasUnresponsive() {
        return wasUnresponsive;
    }

    public void setWasUnresponsive(Integer data) {
        wasUnresponsive = data;
    }

    public Integer getHavePeelingSkin() {
        return havePeelingSkin;
    }

    public void setHavePeelingSkin(Integer data) {
        havePeelingSkin = data;
    }

    public Integer getDidChildCry() {
        return didChildCry;
    }

    public void setDidChildCry(Integer data) {
        didChildCry = data;
    }

    public String getAssistedDeliveryOther() {
        return assistedDeliveryOther;
    }

    public void setAssistedDeliveryOther(String data) {
        assistedDeliveryOther = data;
    }

    public Integer getReceivedTetanusVaccinationDose() {
        return receivedTetanusVaccinationDose;
    }

    public void setReceivedTetanusVaccinationDose(Integer data) {
        receivedTetanusVaccinationDose = data;
    }

    public Integer getHaveMalformation() {
        return haveMalformation;
    }

    public void setHaveMalformation(Integer data) {
        haveMalformation = data;
    }

    public String getWhereDiedFacilityName() {
        return whereDiedFacilityName;
    }

    public void setWhereDiedFacilityName(String data) {
        whereDiedFacilityName = data;
    }

    public Integer getChildSize() {
        return childSize;
    }

    public void setChildSize(Integer data) {
        childSize = data;
    }

    @XmlJavaTypeAdapter(org.openhds.domain.util.CalendarAdapter.class)
    public Calendar getChildDob() {
        return childDob;
    }

    public void setChildDob(Calendar data) {
        childDob = data;
    }

    public Integer getDaysOldWhenChildDied() {
        return daysOldWhenChildDied;
    }

    public void setDaysOldWhenChildDied(Integer data) {
        daysOldWhenChildDied = data;
    }

    public Integer getHaveSkinRash() {
        return haveSkinRash;
    }

    public void setHaveSkinRash(Integer data) {
        haveSkinRash = data;
    }

    public Integer getHaveFeverNumDays() {
        return haveFeverNumDays;
    }

    public void setHaveFeverNumDays(Integer data) {
        haveFeverNumDays = data;
    }

    public Integer getHaveTetanolInjections() {
        return haveTetanolInjections;
    }

    public void setHaveTetanolInjections(Integer data) {
        haveTetanolInjections = data;
    }

    public Integer getBleedFromBody() {
        return bleedFromBody;
    }

    public void setBleedFromBody(Integer data) {
        bleedFromBody = data;
    }

    public Integer getHaveFeverThroughIllness() {
        return haveFeverThroughIllness;
    }

    public void setHaveFeverThroughIllness(Integer data) {
        haveFeverThroughIllness = data;
    }

    public Integer getHaveSwelling() {
        return haveSwelling;
    }

    public void setHaveSwelling(Integer data) {
        haveSwelling = data;
    }

    public String getDeliveryLocationOther() {
        return deliveryLocationOther;
    }

    public void setDeliveryLocationOther(String data) {
        deliveryLocationOther = data;
    }

    public Integer getHaveBloodInStools() {
        return haveBloodInStools;
    }

    public void setHaveBloodInStools(Integer data) {
        haveBloodInStools = data;
    }

    public Integer getSymptom2End() {
        return symptom2End;
    }

    public void setSymptom2End(Integer data) {
        symptom2End = data;
    }

    public Integer getReceivedTetanusVaccination() {
        return receivedTetanusVaccination;
    }

    public void setReceivedTetanusVaccination(Integer data) {
        receivedTetanusVaccination = data;
    }

    public String getUmbilicalCordCutOther() {
        return umbilicalCordCutOther;
    }

    public void setUmbilicalCordCutOther(String data) {
        umbilicalCordCutOther = data;
    }

    public Integer getReceivedCareFromNurse() {
        return receivedCareFromNurse;
    }

    public void setReceivedCareFromNurse(Integer data) {
        receivedCareFromNurse = data;
    }

    public Integer getSurvivedBeforeDeath() {
        return survivedBeforeDeath;
    }

    public void setSurvivedBeforeDeath(Integer data) {
        survivedBeforeDeath = data;
    }

    public Integer getSymptom5Start() {
        return symptom5Start;
    }

    public void setSymptom5Start(Integer data) {
        symptom5Start = data;
    }

    public String getCareSoughtSecond() {
        return careSoughtSecond;
    }

    public void setCareSoughtSecond(String data) {
        careSoughtSecond = data;
    }

    public Integer getSymptom4Severity() {
        return symptom4Severity;
    }

    public void setSymptom4Severity(Integer data) {
        symptom4Severity = data;
    }

    public String getBleedFromBodyLocation() {
        return bleedFromBodyLocation;
    }

    public void setBleedFromBodyLocation(String data) {
        bleedFromBodyLocation = data;
    }

    public Integer getSymptom1Start() {
        return symptom1Start;
    }

    public void setSymptom1Start(Integer data) {
        symptom1Start = data;
    }

    public String getReceivedCareFromOtherSpecify() {
        return receivedCareFromOtherSpecify;
    }

    public void setReceivedCareFromOtherSpecify(String data) {
        receivedCareFromOtherSpecify = data;
    }

    public Integer getLengthOfTimeOfIllness() {
        return lengthOfTimeOfIllness;
    }

    public void setLengthOfTimeOfIllness(Integer data) {
        lengthOfTimeOfIllness = data;
    }

    public Integer getHaveDiarrhoeaNumDays() {
        return haveDiarrhoeaNumDays;
    }

    public void setHaveDiarrhoeaNumDays(Integer data) {
        haveDiarrhoeaNumDays = data;
    }

    public String getHouseNameOfDeceased() {
        return houseNameOfDeceased;
    }

    public void setHouseNameOfDeceased(String data) {
        houseNameOfDeceased = data;
    }

    public Integer getUmbilicalCordCut() {
        return umbilicalCordCut;
    }

    public void setUmbilicalCordCut(Integer data) {
        umbilicalCordCut = data;
    }

    public Integer getHaveDifficultyBreathingNumDays() {
        return haveDifficultyBreathingNumDays;
    }

    public void setHaveDifficultyBreathingNumDays(Integer data) {
        haveDifficultyBreathingNumDays = data;
    }

    public Integer getReceivedCareFromReligiousLeader() {
        return receivedCareFromReligiousLeader;
    }

    public void setReceivedCareFromReligiousLeader(Integer data) {
        receivedCareFromReligiousLeader = data;
    }

    public Integer getHaveTetanolInjectionsDose() {
        return haveTetanolInjectionsDose;
    }

    public void setHaveTetanolInjectionsDose(Integer data) {
        haveTetanolInjectionsDose = data;
    }

    public Integer getSymptom5Severity() {
        return symptom5Severity;
    }

    public void setSymptom5Severity(Integer data) {
        symptom5Severity = data;
    }

    public Integer getSexOfDeceased() {
        return sexOfDeceased;
    }

    public void setSexOfDeceased(Integer data) {
        sexOfDeceased = data;
    }

    public Integer getNumBabiesBorn() {
        return numBabiesBorn;
    }

    public void setNumBabiesBorn(Integer data) {
        numBabiesBorn = data;
    }

    public Integer getDifficultyFeedingAfterBirth() {
        return difficultyFeedingAfterBirth;
    }

    public void setDifficultyFeedingAfterBirth(Integer data) {
        difficultyFeedingAfterBirth = data;
    }

    public Integer getSymptom4End() {
        return symptom4End;
    }

    public void setSymptom4End(Integer data) {
        symptom4End = data;
    }

    public Integer getSymptom1End() {
        return symptom1End;
    }

    public void setSymptom1End(Integer data) {
        symptom1End = data;
    }

    public Integer getReceivedCareFromRelatives() {
        return receivedCareFromRelatives;
    }

    public void setReceivedCareFromRelatives(Integer data) {
        receivedCareFromRelatives = data;
    }

    public Integer getHaveYellowSkin() {
        return haveYellowSkin;
    }

    public void setHaveYellowSkin(Integer data) {
        haveYellowSkin = data;
    }

    public Integer getSymptom5End() {
        return symptom5End;
    }

    public void setSymptom5End(Integer data) {
        symptom5End = data;
    }

    public Integer getRelationshipOfRespondent() {
        return relationshipOfRespondent;
    }

    public void setRelationshipOfRespondent(Integer data) {
        relationshipOfRespondent = data;
    }

    @XmlJavaTypeAdapter(org.openhds.domain.util.CalendarAdapter.class)
    public Calendar getCertifiedCorrectDate() {
        return certifiedCorrectDate;
    }

    public void setCertifiedCorrectDate(Calendar data) {
        certifiedCorrectDate = data;
    }

    public Integer getFathersHealthNow() {
        return fathersHealthNow;
    }

    public void setFathersHealthNow(Integer data) {
        fathersHealthNow = data;
    }

    public String getAccidentTypeOther() {
        return accidentTypeOther;
    }

    public void setAccidentTypeOther(String data) {
        accidentTypeOther = data;
    }

    public Integer getHaveDrawingChest() {
        return haveDrawingChest;
    }

    public void setHaveDrawingChest(Integer data) {
        haveDrawingChest = data;
    }

    public Integer getDifficultyCrying() {
        return difficultyCrying;
    }

    public void setDifficultyCrying(Integer data) {
        difficultyCrying = data;
    }

    public Integer getAssistedDelivery() {
        return assistedDelivery;
    }

    public void setAssistedDelivery(Integer data) {
        assistedDelivery = data;
    }

    public Integer getHaveDiarrhoea() {
        return haveDiarrhoea;
    }

    public void setHaveDiarrhoea(Integer data) {
        haveDiarrhoea = data;
    }

    public Integer getDifficultyBreathingAfterBirth() {
        return difficultyBreathingAfterBirth;
    }

    public void setDifficultyBreathingAfterBirth(Integer data) {
        difficultyBreathingAfterBirth = data;
    }

    public Integer getSignsOfInjury() {
        return signsOfInjury;
    }

    public void setSignsOfInjury(Integer data) {
        signsOfInjury = data;
    }

    public Integer getSymptom3Severity() {
        return symptom3Severity;
    }

    public void setSymptom3Severity(Integer data) {
        symptom3Severity = data;
    }

    public Integer getDifficultyBreathingAfterPeriodWellbeing() {
        return difficultyBreathingAfterPeriodWellbeing;
    }

    public void setDifficultyBreathingAfterPeriodWellbeing(Integer data) {
        difficultyBreathingAfterPeriodWellbeing = data;
    }

    public Integer getReceivedCareFromOther() {
        return receivedCareFromOther;
    }

    public void setReceivedCareFromOther(Integer data) {
        receivedCareFromOther = data;
    }

    public Integer getSourceOfDob() {
        return sourceOfDob;
    }

    public void setSourceOfDob(Integer data) {
        sourceOfDob = data;
    }

    public Integer getHaveCoughNumDays() {
        return haveCoughNumDays;
    }

    public void setHaveCoughNumDays(Integer data) {
        haveCoughNumDays = data;
    }

    @XmlJavaTypeAdapter(org.openhds.domain.util.CalendarAdapter.class)
    public Calendar getDateOfInterview() {
        return dateOfInterview;
    }

    public void setDateOfInterview(Calendar data) {
        dateOfInterview = data;
    }

    public Integer getWhenIllnessStarted() {
        return whenIllnessStarted;
    }

    public void setWhenIllnessStarted(Integer data) {
        whenIllnessStarted = data;
    }

    public Integer getHaveSpasms() {
        return haveSpasms;
    }

    public void setHaveSpasms(Integer data) {
        haveSpasms = data;
    }

    public String getWhereDiedFacilityAddress() {
        return whereDiedFacilityAddress;
    }

    public void setWhereDiedFacilityAddress(String data) {
        whereDiedFacilityAddress = data;
    }

    public Integer getSymptom2Start() {
        return symptom2Start;
    }

    public void setSymptom2Start(Integer data) {
        symptom2Start = data;
    }

    public Integer getHaveFontanel() {
        return haveFontanel;
    }

    public void setHaveFontanel(Integer data) {
        haveFontanel = data;
    }

    public Integer getWhereDied() {
        return whereDied;
    }

    public void setWhereDied(Integer data) {
        whereDied = data;
    }

    public Integer getHaveCough() {
        return haveCough;
    }

    public void setHaveCough(Integer data) {
        haveCough = data;
    }

    public Integer getReceivedCareFromTraditionalHealer() {
        return receivedCareFromTraditionalHealer;
    }

    public void setReceivedCareFromTraditionalHealer(Integer data) {
        receivedCareFromTraditionalHealer = data;
    }

    public Integer getReceivedCareOutsideHomeNumDays() {
        return receivedCareOutsideHomeNumDays;
    }

    public void setReceivedCareOutsideHomeNumDays(Integer data) {
        receivedCareOutsideHomeNumDays = data;
    }

    public String getCareSoughtThird() {
        return careSoughtThird;
    }

    public void setCareSoughtThird(String data) {
        careSoughtThird = data;
    }

    public Integer getSymptom1Severity() {
        return symptom1Severity;
    }

    public void setSymptom1Severity(Integer data) {
        symptom1Severity = data;
    }

    public String getSourceOfDobOther() {
        return sourceOfDobOther;
    }

    public void setSourceOfDobOther(String data) {
        sourceOfDobOther = data;
    }

    public Integer getHaveFastBreathingNumDays() {
        return haveFastBreathingNumDays;
    }

    public void setHaveFastBreathingNumDays(Integer data) {
        haveFastBreathingNumDays = data;
    }

    public Integer getSymptom4Start() {
        return symptom4Start;
    }

    public void setSymptom4Start(Integer data) {
        symptom4Start = data;
    }

    public String getNameOfDeceased() {
        return nameOfDeceased;
    }

    public void setNameOfDeceased(String data) {
        nameOfDeceased = data;
    }

    public Integer getHaveDiarrhoeaNumDaysMostFrequent() {
        return haveDiarrhoeaNumDaysMostFrequent;
    }

    public void setHaveDiarrhoeaNumDaysMostFrequent(Integer data) {
        haveDiarrhoeaNumDaysMostFrequent = data;
    }

    public Integer getHavePeriodsOfBreathing() {
        return havePeriodsOfBreathing;
    }

    public void setHavePeriodsOfBreathing(Integer data) {
        havePeriodsOfBreathing = data;
    }

    public String getInterviewersComments() {
        return interviewersComments;
    }

    public void setInterviewersComments(String data) {
        interviewersComments = data;
    }

    public Integer getSymptom3Start() {
        return symptom3Start;
    }

    public void setSymptom3Start(Integer data) {
        symptom3Start = data;
    }

    public Integer getDifficultyFeedingAfterBirthLength() {
        return difficultyFeedingAfterBirthLength;
    }

    public void setDifficultyFeedingAfterBirthLength(Integer data) {
        difficultyFeedingAfterBirthLength = data;
    }

    public Integer getAnimalBiteType() {
        return animalBiteType;
    }

    public void setAnimalBiteType(Integer data) {
        animalBiteType = data;
    }

    public Integer getReceivedMedicalAttention() {
        return receivedMedicalAttention;
    }

    public void setReceivedMedicalAttention(Integer data) {
        receivedMedicalAttention = data;
    }

    public String getUmbilicalCordOther() {
        return umbilicalCordOther;
    }

    public void setUmbilicalCordOther(String data) {
        umbilicalCordOther = data;
    }

    public String getCorrectedBy() {
        return correctedBy;
    }

    public void setCorrectedBy(String data) {
        correctedBy = data;
    }

    public Integer getDeliveryLocation() {
        return deliveryLocation;
    }

    public void setDeliveryLocation(Integer data) {
        deliveryLocation = data;
    }

    public String getNameOfRespondent() {
        return nameOfRespondent;
    }

    public void setNameOfRespondent(String data) {
        nameOfRespondent = data;
    }

    public String getWhereDiedOther() {
        return whereDiedOther;
    }

    public void setWhereDiedOther(String data) {
        whereDiedOther = data;
    }

    public String getCareSoughtFirst() {
        return careSoughtFirst;
    }

    public void setCareSoughtFirst(String data) {
        careSoughtFirst = data;
    }

    public String getRelationshipOfRespondentOther() {
        return relationshipOfRespondentOther;
    }

    public void setRelationshipOfRespondentOther(String data) {
        relationshipOfRespondentOther = data;
    }

}
