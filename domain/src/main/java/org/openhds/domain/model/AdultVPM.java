
package org.openhds.domain.model;

import java.io.Serializable;
import java.util.Calendar;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.Past;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.openhds.domain.annotations.Description;
import org.openhds.domain.constraint.CheckEntityNotVoided;
import org.openhds.domain.constraint.CheckIndividualNotUnknown;
import org.openhds.domain.constraint.ExtensionIntegerConstraint;
import org.openhds.domain.constraint.ExtensionStringConstraint;
import org.openhds.domain.constraint.Searchable;


/**
 * Generated by JCodeModel
 * 
 */
@Description(description = "Standard Verbal Autopsy Questionnaire for adolescent and adult deaths. (12 years and over)")
@Entity
@Table(name = "adultvpm")
public class AdultVPM
    extends AuditableCollectedEntity
    implements Serializable
{

    public final static long serialVersionUID = -4307963520301090920L;
    @Searchable
    @CheckEntityNotVoided
    @CheckIndividualNotUnknown
    @ManyToOne(cascade = {
        CascadeType.ALL
    })
    @Description(description = "Individual who deceased, identified by the external id.")
    private Individual individual;
    @Searchable
    @ManyToOne
    @Description(description = "Location of the deceased individual.")
    private Location house;
    @Searchable
    @ManyToOne
    @Description(description = "Visit that is associated with the verbal autopsy, identified by the external id.")
    private Visit visit;
    @Description(description = "Reason for admission of hospital facility 2")
    private String hospitalFacility2Reason;
    @Description(description = "How many days did the individual have swelling on their ankle")
    private Integer swellingAnkleDays;
    @Description(description = "Did the individual have any previous complicated delivery")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for havePreviousComplicatedDelivery", allowNull = true)
    private Integer havePreviousComplicatedDelivery;
    @Description(description = "Marital status of deceased individual")
    @ExtensionIntegerConstraint(constraint = "maritalStatusOfDeceasedConstraint", message = "Invalid Value for maritalStatusOfDeceased", allowNull = true)
    private Integer maritalStatusOfDeceased;
    @Description(description = "Which prescription drug did the individual consume")
    private String didPrescriptionDrugType;
    @Description(description = "How many days did the individual have shortness of breath")
    private Integer haveShortnessOfBreathDays;
    @Description(description = "How many days did the individual have diarrhoea")
    private Integer haveDiarrhoeaDays;
    @Description(description = "Did the individual suffer from epilepsy")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for sufferFromEpilepsy", allowNull = true)
    private Integer sufferFromEpilepsy;
    @Description(description = "Did the individual have chills")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveChills", allowNull = true)
    private Integer haveChills;
    @Description(description = "How did the level of consciousness start")
    @ExtensionIntegerConstraint(constraint = "consciousnessStartConstraint", message = "Invalid Value for consciousnessStart", allowNull = true)
    private Integer consciousnessStart;
    @Description(description = "Did the individual ever consume heroin")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didHeroin", allowNull = true)
    private Integer didHeroin;
    @Description(description = "Symptom 7 Duration reported by respondent")
    private Integer symptom7Duration;
    @Description(description = "What type of abdominal pain was it")
    @ExtensionIntegerConstraint(constraint = "abdominalPainTypeConstraint", message = "Invalid Value for abdominalPainType", allowNull = true)
    private Integer abdominalPainType;
    @Description(description = "What other consciousness level did the individual experience")
    private String consciousnessLevelOther;
    @Description(description = "Did the deceased suffer from diabetes")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for sufferFromDiabetes", allowNull = true)
    private Integer sufferFromDiabetes;
    @Description(description = "Specify the type of abdominal pain")
    private String abdominalPainTypeOther;
    @Description(description = "How many days did the individual have swelling on their face")
    private Integer swellingFaceDays;
    @Description(description = "Did the individual have paralysis of the lower limbs")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveParalysisLowerLimbs", allowNull = true)
    private Integer haveParalysisLowerLimbs;
    @Description(description = "The number of days the individual had distention of the abdomen")
    private Integer distentionOfAbdomenDays;
    @Description(description = "Was there a change in urine passed daily")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for changeInUrinePassed", allowNull = true)
    private Integer changeInUrinePassed;
    @Description(description = "Symptom 9 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom9Severity", allowNull = true)
    private Integer symptom9Severity;
    @Description(description = "Did the individual ever drink alcohol")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didDrinkAlcohol", allowNull = true)
    private Integer didDrinkAlcohol;
    @Description(description = "Did the individual have a fever")
    @ExtensionStringConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveFever", allowNull = true)
    private String haveFever;
    @Description(description = "Did the individual commit suicide")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for committedSuicide", allowNull = true)
    private Integer committedSuicide;
    @Description(description = "Symptom 8 Duration reported by respondent")
    private Integer symptom8Duration;
    @Description(description = "Symptom3 Duration reported by respondent")
    private Integer symptom3Duration;
    @Description(description = "Did the individual have a rash on their trunk")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for rashOnTrunk", allowNull = true)
    private Integer rashOnTrunk;
    @Description(description = "How many days did the individual have difficulty swallowing")
    private Integer swallowingPainDays;
    @Description(description = "Did the individual die from an injury or accident ")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for dieFromInjuryOrAccident", allowNull = true)
    private Integer dieFromInjuryOrAccident;
    @Description(description = "Was the chest pain over the sternum")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for chestPainLocationSternum", allowNull = true)
    private Integer chestPainLocationSternum;
    @Description(description = "How did the individual commit suicide")
    @ExtensionIntegerConstraint(constraint = "suicideConstraint", message = "Invalid Value for howCommitSuicide", allowNull = true)
    private Integer howCommitSuicide;
    @Description(description = "Did the individual die where the accident occurred")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for diedAtAccident", allowNull = true)
    private Integer diedAtAccident;
    @Description(description = "How many days did the individual have swelling on their groin")
    private Integer swellingGroinDays;
    @Description(description = "Highest level of education attained by deceased individual")
    @ExtensionIntegerConstraint(constraint = "highestEducationOfDeceasedConstraint", message = "Invalid Value for highestLvlOfEducationOfDeceased", allowNull = true)
    private Integer highestLvlOfEducationOfDeceased;
    @Description(description = "Specify what the rash looked like")
    private String rashLookLikeOther;
    @Description(description = "How long before death did the individual lose weight")
    @ExtensionIntegerConstraint(constraint = "loseWeightHowLongConstraint", message = "Invalid Value for loseWeightHowLong", allowNull = true)
    private Integer loseWeightHowLong;
    @Description(description = "Did the individual drink illicit brews")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didDrinkIllicitBrews", allowNull = true)
    private Integer didDrinkIllicitBrews;
    @Description(description = "Did the individual have obstructed labour")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveObstructedLabour", allowNull = true)
    private Integer haveObstructedLabour;
    @Description(description = "Was the mass in the upper left part of the abdomen")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for massInUpperLeftAbdomen", allowNull = true)
    private Integer massInUpperLeftAbdomen;
    @Description(description = "Did the individual have abdominal pain")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveAbdominalPain", allowNull = true)
    private Integer haveAbdominalPain;
    @Description(description = "How many days did the individual have a change in the amount of urine passed each day")
    private Integer changeInUrinePassedNumDays;
    @Description(description = "Symptom 6 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom6Severity", allowNull = true)
    private Integer symptom6Severity;
    @Description(description = "Date of birth of child.")
    @Temporal(TemporalType.DATE)
    @Past
    private Calendar childDob;
    @Description(description = "Did the individual ever consume inhalants")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didInhalants", allowNull = true)
    private Integer didInhalants;
    @Description(description = "Did the deceased suffer from TB")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for sufferFromTB", allowNull = true)
    private Integer sufferFromTB;
    @Description(description = "What is the severity of the pain")
    @ExtensionIntegerConstraint(constraint = "loseWeightSeverityConstraint", message = "Invalid Value for abdominalPainSeverity", allowNull = true)
    private Integer abdominalPainSeverity;
    @Description(description = "Date the individual used hospital facility 3.")
    @Temporal(TemporalType.DATE)
    @Past
    private Calendar hospitalFacility3Date;
    @Description(description = "How did the chest pain start")
    @ExtensionIntegerConstraint(constraint = "chestPainStartConstraint", message = "Invalid Value for chestPainStart", allowNull = true)
    private Integer chestPainStart;
    @Description(description = "How many days was there a change in urine color")
    private Integer urineColorNumDays;
    @Description(description = "Did the individual have swelling of their joints")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for swellingOfJoints", allowNull = true)
    private Integer swellingOfJoints;
    @Description(description = "Did the individual recieve any anti-malaria drug during the illness")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didReceiveAntiMalariDrug", allowNull = true)
    private Integer didReceiveAntiMalariDrug;
    @Description(description = "Did the individual have a rash on their extremities")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for rashOnExtremities", allowNull = true)
    private Integer rashOnExtremities;
    @Description(description = "Was the baby born alive")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for babyBornAlive", allowNull = true)
    private Integer babyBornAlive;
    @Description(description = "Specify where the individual delivered")
    private String deliveryLocationOther;
    @Description(description = "Reason for admission of hospital facility 3")
    private String hospitalFacility3Reason;
    @Description(description = "Did the individual have swelling of their groin")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for swellingOfGroin", allowNull = true)
    private Integer swellingOfGroin;
    @Description(description = "Did the individual ever consume lsd")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didLSD", allowNull = true)
    private Integer didLSD;
    @Description(description = "What kind of neck pain")
    @ExtensionIntegerConstraint(constraint = "neckPainConstraint", message = "Invalid Value for neckPainLevel", allowNull = true)
    private Integer neckPainLevel;
    @Description(description = "How is the health of the baby now")
    @ExtensionIntegerConstraint(constraint = "babyHealthNowConstraint", message = "Invalid Value for babyHealthNow", allowNull = true)
    private Integer babyHealthNow;
    @Description(description = "How many days did the individual have fits")
    private Integer haveFitsNumDays;
    @Description(description = "How long did the individual survive before they died")
    @ExtensionIntegerConstraint(constraint = "survivedBeforeDeathConstraint", message = "Invalid Value for survivedBeforeDeath", allowNull = true)
    private Integer survivedBeforeDeath;
    @Description(description = "The development of abdomen distention")
    @ExtensionIntegerConstraint(constraint = "distentionOfAbdomenConstraint", message = "Invalid Value for distentionOfAbdomenDevelopment", allowNull = true)
    private Integer distentionOfAbdomenDevelopment;
    @Description(description = "Was the fever continuous")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for feverContinuous", allowNull = true)
    private Integer feverContinuous;
    @Description(description = "Symptom 4 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom4Severity", allowNull = true)
    private Integer symptom4Severity;
    @Description(description = "What did the vomit look like")
    @ExtensionIntegerConstraint(constraint = "vomitLookLikeConstraint", message = "Invalid Value for vomitLookLike", allowNull = true)
    private Integer vomitLookLike;
    @Description(description = "How long had the individual been drinking alcohol")
    @ExtensionIntegerConstraint(constraint = "didDrinkAlcoholLengthConstraint", message = "Invalid Value for didDrinkAlcoholLength", allowNull = true)
    private Integer didDrinkAlcoholLength;
    @Description(description = "Did the deceased suffer from cancer")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for sufferFromCancer", allowNull = true)
    private Integer sufferFromCancer;
    @Description(description = "Did the individual have any swelling or ulcer in the breast")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveSwellingInBreast", allowNull = true)
    private Integer haveSwellingInBreast;
    @Description(description = "Was the injury accidental or intentional")
    @ExtensionIntegerConstraint(constraint = "injuryTypeConstraint", message = "Invalid Value for injuryType", allowNull = true)
    private Integer injuryType;
    @Description(description = "Did the individual ever smoke tobacco")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didSmoke", allowNull = true)
    private Integer didSmoke;
    @Description(description = "Did the individual have stiffness of the whole body during fits")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for stiffnessOfWholeBodyDuringFits", allowNull = true)
    private Integer stiffnessOfWholeBodyDuringFits;
    @Description(description = "Did the individual deliver within six weeks before her death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for deliverWithinSixWeeksBeforeDeath", allowNull = true)
    private Integer deliverWithinSixWeeksBeforeDeath;
    @Description(description = "Did the individual ever smoke filtered cigarettes")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didSmokeFiltered", allowNull = true)
    private Integer didSmokeFiltered;
    @Description(description = "Was the productive")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for sputum", allowNull = true)
    private Integer sputum;
    @Description(description = "Sex of deceased individual")
    @ExtensionIntegerConstraint(constraint = "genderConstraint", message = "Invalid Value for sexOfDeceased", allowNull = true)
    private Integer sexOfDeceased;
    @Description(description = "How often did the individual drink alcohol to get drunk")
    @ExtensionIntegerConstraint(constraint = "didDrinkAlcoholHowOftenConstraint", message = "Invalid Value for didDrinkAlcoholToGetDrunk", allowNull = true)
    private Integer didDrinkAlcoholToGetDrunk;
    @Description(description = "Did the individual have any seizures before death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveSeizuresBeforeDeath", allowNull = true)
    private Integer haveSeizuresBeforeDeath;
    @Description(description = "Was there blood in the stool")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for bloodInStool", allowNull = true)
    private Integer bloodInStool;
    @Description(description = "Did the individual have shortness of breath")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveShortnessOfBreath", allowNull = true)
    private Integer haveShortnessOfBreath;
    @Description(description = "How many days did the individual have neck pain")
    private Integer neckPainDays;
    @Description(description = "Did the individual have an ulcer on any part of the body")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveUlcer", allowNull = true)
    private Integer haveUlcer;
    @Description(description = "How many days did the individual have the cough")
    private Integer haveCoughDays;
    @Description(description = "How much tobacco did the individual smoke each day")
    @ExtensionIntegerConstraint(constraint = "didSmokeHowMuchConstraint", message = "Invalid Value for didSmokeHowMuch", allowNull = true)
    private Integer didSmokeHowMuch;
    @Description(description = "Was the diarrhoea continuous")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for diarrhoeaContinuous", allowNull = true)
    private Integer diarrhoeaContinuous;
    @Description(description = "How often did the individual smoke tobacco")
    @ExtensionIntegerConstraint(constraint = "didSmokeHowOftenConstraint", message = "Invalid Value for didSmokeHowOften", allowNull = true)
    private Integer didSmokeHowOften;
    @Description(description = "How many days did the individual have paralysis")
    private Integer haveParalysisNumDays;
    @Description(description = "Who managed the delivery")
    @ExtensionIntegerConstraint(constraint = "managedDeliveryConstraint", message = "Invalid Value for managedDelivery", allowNull = true)
    private Integer managedDelivery;
    @Description(description = "Relationship of respondent to the deceased individual")
    @ExtensionIntegerConstraint(constraint = "relationshipOfRespondentConstraint", message = "Invalid Value for relationshipOfRespondent", allowNull = true)
    private Integer relationshipOfRespondent;
    @Description(description = "Data corrected on.")
    @Temporal(TemporalType.DATE)
    @Past
    private Calendar certifiedCorrectDate;
    @Description(description = "What other kind of injury or accident")
    private String accidentTypeOther;
    @Description(description = "Symptom 9 Duration reported by respondent")
    private Integer symptom9Duration;
    @Description(description = "Chest activity pain")
    @ExtensionIntegerConstraint(constraint = "chestPainRestingConstraint", message = "Invalid Value for chestPainActivity", allowNull = true)
    private Integer chestPainActivity;
    @Description(description = "Did the individual have noisy breathing")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveNoisyBreathing", allowNull = true)
    private Integer haveNoisyBreathing;
    @Description(description = "Did the individual have diarrhoea")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveDiarrhoea", allowNull = true)
    private Integer haveDiarrhoea;
    @Description(description = "Did the individual have a mass in the abdomen")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveMassInAbdomen", allowNull = true)
    private Integer haveMassInAbdomen;
    @Description(description = "Symptom 7 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom7Severity", allowNull = true)
    private Integer symptom7Severity;
    @Description(description = "Which other drugs did the individual consume")
    private String didOtherDrugs;
    @Description(description = "Date of interview for the verbal autopsy.")
    @Temporal(TemporalType.DATE)
    @Past
    private Calendar dateOfInterview;
    @Description(description = "Did the individual have too much bleeding before delivery")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveTooMuchBleedingBeforeDelivery", allowNull = true)
    private Integer haveTooMuchBleedingBeforeDelivery;
    @Description(description = "How many days was the individual vomitting")
    private Integer haveVomittingDays;
    @Description(description = "Did the individual have difficulty passing urine")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for difficultyPassingUrine", allowNull = true)
    private Integer difficultyPassingUrine;
    @Description(description = "Did the individual have pain while swallowing")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveSwallowingPain", allowNull = true)
    private Integer haveSwallowingPain;
    @Description(description = "Did the individual have a rash all over their body")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for rashAllOverBody", allowNull = true)
    private Integer rashAllOverBody;
    @Description(description = "How difficult was it for the individual to pass urine")
    @ExtensionIntegerConstraint(constraint = "difficultyPassingUrineConstraint", message = "Invalid Value for difficultyPassingUrineSeverity", allowNull = true)
    private Integer difficultyPassingUrineSeverity;
    @Description(description = "How long has the individual been using drugs")
    @ExtensionIntegerConstraint(constraint = "didDrinkAlcoholLengthConstraint", message = "Invalid Value for didDrugsLength", allowNull = true)
    private Integer didDrugsLength;
    @Description(description = "Where there other pain")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for chestPainLocationOther", allowNull = true)
    private Integer chestPainLocationOther;
    @Description(description = "Weeks ill before individual died")
    private Integer weeksIll;
    @Description(description = "Was there a change in urine color")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for changeInUrineColor", allowNull = true)
    private Integer changeInUrineColor;
    @Description(description = "Did the individual drink anything else")
    private String didDrinkOther;
    @Description(description = "Did the individual have a cough")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveCough", allowNull = true)
    private Integer haveCough;
    @Description(description = "Symptom 10 Duration reported by respondent")
    private Integer symptom10Duration;
    @Description(description = "Symptom 1 Duration reported by respondent")
    private Integer symptom1Duration;
    @Description(description = "How many days was the individual vomitting severely")
    private Integer haveVomittingSevereDays;
    @Description(description = "Did the individual cough blood")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for coughBlood", allowNull = true)
    private Integer coughBlood;
    @Description(description = "Did the skin crack/split or peel")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for rashPeel", allowNull = true)
    private Integer rashPeel;
    @Description(description = "Did the individual have an abortion/miscarriage before her death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveAbortionBeforeDeath", allowNull = true)
    private Integer haveAbortionBeforeDeath;
    @Description(description = "Did the individual lose weight before death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for loseWeightBeforeDeath", allowNull = true)
    private Integer loseWeightBeforeDeath;
    @Description(description = "Did the individual ever smoke unfiltered cigarettes")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didSmokeUnfiltered", allowNull = true)
    private Integer didSmokeUnfiltered;
    @Description(description = "Specify how difficulty it was for the individual to pass urine")
    private String difficultyPassingUrineSeverityOther;
    @Description(description = "How many days did the individual have abdominal pain")
    private Integer haveAbdominalPainDays;
    @Description(description = "How many days did the individual have a fever")
    private Integer feverDays;
    @Description(description = "Years ill before individual died")
    private Integer yearsIll;
    @Description(description = "Specify where the individual had surgery")
    private String surgeryLocationOther;
    @Description(description = "Symptom 4 Duration reported by respondent")
    private Integer symptom4Duration;
    @Description(description = "Did the individual have surgery before death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveSurgery", allowNull = true)
    private Integer haveSurgery;
    @Description(description = "Was the chest pain over the heart")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for chestPainLocationHeart", allowNull = true)
    private Integer chestPainLocationHeart;
    @Description(description = "Did the individual have an ongoing chronic illness in the month before the accident")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for chronicIllnessBeforeAccident", allowNull = true)
    private Integer chronicIllnessBeforeAccident;
    @Description(description = "Did the individual have swelling around the ankle")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for swellingAroundAnkle", allowNull = true)
    private Integer swellingAroundAnkle;
    @Description(description = "Did the individual ever consume cocaine")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didCocaine", allowNull = true)
    private Integer didCocaine;
    @Description(description = "Did the individual have red eyes")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for haveRedEyes", allowNull = true)
    private Integer haveRedEyes;
    @Description(description = "Symptom 10 reported by respondent")
    private String symptom10;
    @Description(description = "Corrected by")
    private String correctedBy;
    @Description(description = "Did the individual ever smoke a pipe")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didSmokePipe", allowNull = true)
    private Integer didSmokePipe;
    @Description(description = "Specify where the individual died")
    private String whereDiedOther;
    @Description(description = "Did the individual drink beer")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didDrinkBeer", allowNull = true)
    private Integer didDrinkBeer;
    @Description(description = "Did the individual have difficulty delivering placenta")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveDifficultyDeliveringPlacenta", allowNull = true)
    private Integer haveDifficultyDeliveringPlacenta;
    @Description(description = "When in between fits, how aware was the individual")
    @ExtensionIntegerConstraint(constraint = "fitsAwarenessConstraint", message = "Invalid Value for fitsAwareness", allowNull = true)
    private Integer fitsAwareness;
    @Description(description = "How many months was the individual pregnant")
    private Integer numMonthsPregnant;
    @Description(description = "Did the individual have swelling of the armpit")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for swellingOfArmpit", allowNull = true)
    private Integer swellingOfArmpit;
    @Description(description = "How long has the individual been smoking tobacco")
    @ExtensionIntegerConstraint(constraint = "didDrinkAlcoholLengthConstraint", message = "Invalid Value for didSmokeLength", allowNull = true)
    private Integer didSmokeLength;
    @Description(description = "Did the individual have a headache")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveHeadache", allowNull = true)
    private Integer haveHeadache;
    @Description(description = "Did the individual have paralysis")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveParalysis", allowNull = true)
    private Integer haveParalysis;
    @Description(description = "How many days did the individaul have a rash")
    private Integer rashDays;
    @Description(description = "What kind of injury or accident")
    @ExtensionIntegerConstraint(constraint = "accidentTypeConstraint", message = "Invalid Value for accidentType", allowNull = true)
    private Integer accidentType;
    @Description(description = "Did the individual receive any drug during the illness")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didReceiveDrug", allowNull = true)
    private Integer didReceiveDrug;
    @Description(description = "Did the individual have difficulty in opening their mouth during fits")
    @ExtensionIntegerConstraint(constraint = "fitsOpeningMouthConstraint", message = "Invalid Value for fitsOpeningMouth", allowNull = true)
    private Integer fitsOpeningMouth;
    @Description(description = "Did the individual drink traditional brews")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didDrinkBrews", allowNull = true)
    private Integer didDrinkBrews;
    @Description(description = "Explanation about the illness that led to the baby's death")
    private String aboutIllness;
    @Description(description = "When most frequent, how many fits did the individual have")
    private Integer haveFitsMostFreqNumDays;
    @Description(description = "Did the individual have too much bleeding after delivery")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveTooMuchBleedingAfterDelivery", allowNull = true)
    private Integer haveTooMuchBleedingAfterDelivery;
    @Description(description = "Did the individual have a rash anywhere else")
    private String rashOther;
    @Description(description = "Did the individual experience any change in consciousness")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for changeInConsciousness", allowNull = true)
    private Integer changeInConsciousness;
    @Description(description = "Did the individual suffer from HIV/Aids")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for sufferFromHIV", allowNull = true)
    private Integer sufferFromHIV;
    @Description(description = "What was the delivery mode")
    @ExtensionIntegerConstraint(constraint = "deliveryModeConstraint", message = "Invalid Value for deliveryMode", allowNull = true)
    private Integer deliveryMode;
    @Description(description = "Did the individual have pins and needles in feet")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for pinsNeedlesInFeet", allowNull = true)
    private Integer pinsNeedlesInFeet;
    @Description(description = "How much urine did the individual pass in a day")
    @ExtensionIntegerConstraint(constraint = "urinePassedAmountConstraint", message = "Invalid Value for urinePassedAmount", allowNull = true)
    private Integer urinePassedAmount;
    @Description(description = "Reason for admission of hospital facility 1")
    private String hospitalFacility1Reason;
    @Description(description = "Symptom 9 reported by respondent")
    private String symptom9;
    @Description(description = "What was the level of consciousness")
    @ExtensionIntegerConstraint(constraint = "consciousnessConstraint", message = "Invalid Value for consciousnessLevel", allowNull = true)
    private Integer consciousnessLevel;
    @Description(description = "Symptom 8 reported by respondent")
    private String symptom8;
    @Description(description = "Symptom 7 reported by respondent")
    private String symptom7;
    @Description(description = "Where was the ulcer located")
    private String haveUlcerLocation;
    @Description(description = "Symptom 6 reported by respondent")
    private String symptom6;
    @Description(description = "Symptom 5 reported by respondent")
    private String symptom5;
    @Description(description = "Symptom 4 reported by respondent")
    private String symptom4;
    @Description(description = "Was the chest pain over the ribs")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for chestPainLocationRibs", allowNull = true)
    private Integer chestPainLocationRibs;
    @Description(description = "Symptom 2 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom2Severity", allowNull = true)
    private Integer symptom2Severity;
    @Description(description = "Symptom 3 reported by respondent")
    private String symptom3;
    @Description(description = "Symptom 2 reported by respondent")
    private String symptom2;
    @Description(description = "Symptom 1 reported by respondent")
    private String symptom1;
    @Description(description = "Specify who managed the delivery")
    private String managedDeliveryOther;
    @Description(description = "Did the individual have puffiness of the face")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for puffinessOfFace", allowNull = true)
    private Integer puffinessOfFace;
    @Description(description = "Occupation of deceased individual")
    @ExtensionIntegerConstraint(constraint = "occupationOfDeceasedConstraint", message = "Invalid Value for occupationOfDeceased", allowNull = true)
    private Integer occupationOfDeceased;
    @Description(description = "How did the individual look at the end of their life")
    @ExtensionIntegerConstraint(constraint = "lookEndOfLifeConstraint", message = "Invalid Value for lookEndOfLife", allowNull = true)
    private Integer lookEndOfLife;
    @Description(description = "How many days did the individual have swelling on their armpit")
    private Integer swellingArmpitDays;
    @Description(description = "Loss of weight severity")
    @ExtensionIntegerConstraint(constraint = "loseWeightSeverityConstraint", message = "Invalid Value for loseWeightSeverity", allowNull = true)
    private Integer loseWeightSeverity;
    @Description(description = "Was the fever severe")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for feverSevere", allowNull = true)
    private Integer feverSevere;
    @Description(description = "When the diarrhoea was severe, how many times did the individual pass a stool in a day")
    private Integer stoolDays;
    @Description(description = "Did the individual ever smoke a cigar")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didSmokeCigar", allowNull = true)
    private Integer didSmokeCigar;
    @Description(description = "Symptom 5 Duration reported by respondent")
    private Integer symptom5Duration;
    @Description(description = "Did the individual ever use drugs")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didDrugs", allowNull = true)
    private Integer didDrugs;
    @Description(description = "Did the individual bleed from body openings")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for bleedingFromOpenings", allowNull = true)
    private Integer bleedingFromOpenings;
    @Description(description = "Was the mass in the upper right part of the abdomen")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for massInUpperRightAbdomen", allowNull = true)
    private Integer massInUpperRightAbdomen;
    @Description(description = "Did the individual have fits")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveFits", allowNull = true)
    private Integer haveFits;
    @Description(description = "Highest level of education of the respondent")
    @ExtensionIntegerConstraint(constraint = "highestEducationOfDeceasedConstraint", message = "Invalid Value for educationOfRespondent", allowNull = true)
    private Integer educationOfRespondent;
    @Description(description = "How often did the individual use drugs to get high")
    @ExtensionIntegerConstraint(constraint = "didDrinkAlcoholHowOftenConstraint", message = "Invalid Value for didDrugsToGetHigh", allowNull = true)
    private Integer didDrugsToGetHigh;
    @Description(description = "Where exactly was the pain located")
    private String abdominalPainLocation;
    @Description(description = "How long did the paralysis take to develop")
    @ExtensionIntegerConstraint(constraint = "paralysisDevelopmentConstraint", message = "Invalid Value for paralysisDevelopment", allowNull = true)
    private Integer paralysisDevelopment;
    @Description(description = "How many days before her death did she have an abortion/miscarriage")
    private Integer haveAbortionBeforeDeathNumDays;
    @Description(description = "Length of chest pain")
    @ExtensionIntegerConstraint(constraint = "lengthOfChestPainConstraint", message = "Invalid Value for chestPainLength", allowNull = true)
    private Integer chestPainLength;
    @Description(description = "Chest resting pain")
    @ExtensionIntegerConstraint(constraint = "chestPainRestingConstraint", message = "Invalid Value for chestPainResting", allowNull = true)
    private Integer chestPainResting;
    @Description(description = "Did the individual receive any antibiotics during the illness")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didReceiveAntibiotics", allowNull = true)
    private Integer didReceiveAntibiotics;
    @Description(description = "Did the individual have sunken eyes")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveSunkenEyes", allowNull = true)
    private Integer haveSunkenEyes;
    @Description(description = "Did the individual have itching of skin")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveItchingOfSkin", allowNull = true)
    private Integer haveItchingOfSkin;
    @Description(description = "When was the cough worse")
    @ExtensionIntegerConstraint(constraint = "coughWorstConstraint", message = "Invalid Value for whenCoughWorse", allowNull = true)
    private Integer whenCoughWorse;
    @Description(description = "Did the individual look pale")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for lookPale", allowNull = true)
    private Integer lookPale;
    @Description(description = "House name of deceased individual")
    private String houseNameOfDeceased;
    @Description(description = "What was the color of the urine")
    @ExtensionIntegerConstraint(constraint = "urineColorConstraint", message = "Invalid Value for urineColor", allowNull = true)
    private Integer urineColor;
    @Description(description = "Did the individual have neck pain")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveNeckPain", allowNull = true)
    private Integer haveNeckPain;
    @Description(description = "Days ill before individual died")
    private Integer daysIll;
    @Description(description = "Sympyom 2 Duration reported by respondent")
    private Integer symptom2Duration;
    @Description(description = "Did the deceased suffer from heart disease")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for sufferFromHeartDisease", allowNull = true)
    private Integer sufferFromHeartDisease;
    @Description(description = "Did the individual drink spirits")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didDrinkSpirits", allowNull = true)
    private Integer didDrinkSpirits;
    @Description(description = "Symptom 5 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom5Severity", allowNull = true)
    private Integer symptom5Severity;
    @Description(description = "Did the individual have a high fever after the abortion")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveHighFeverAfterAbortion", allowNull = true)
    private Integer haveHighFeverAfterAbortion;
    @Description(description = "How many days before death did the individual have surgery")
    private Integer haveSurgeryNumDays;
    @Description(description = "What was the consistency of the stools")
    @ExtensionIntegerConstraint(constraint = "stoolConsistencyConstraint", message = "Invalid Value for stoolConsistency", allowNull = true)
    private Integer stoolConsistency;
    @Description(description = "Did the individual have a rash")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveRash", allowNull = true)
    private Integer haveRash;
    @Description(description = "Did the individual ever consume prescription drugs")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didPrescriptionDrugs", allowNull = true)
    private Integer didPrescriptionDrugs;
    @Description(description = "Did the individual have night sweats")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveNightSweats", allowNull = true)
    private Integer haveNightSweats;
    @Description(description = "Did the individual have palpitation")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for chestPalpitation", allowNull = true)
    private Integer chestPalpitation;
    @Description(description = "Hospitalization facility 3 used in the past two years")
    private String hospitalFacility3;
    @Description(description = "Hospitalization facility 1 used in the past two years")
    private String hospitalFacility1;
    @Description(description = "Specify how the level of conscioussness started")
    private String consciousnessStartOther;
    @Description(description = "Hospitalization facility 2 used in the past two years")
    private String hospitalFacility2;
    @Description(description = "Symptom 10 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom10Severity", allowNull = true)
    private Integer symptom10Severity;
    @Description(description = "Did the individual have a rash on their face")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for rashOnFace", allowNull = true)
    private Integer rashOnFace;
    @Description(description = "Did the individual ever consume anabolic steroids")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didAnabolicSteroid", allowNull = true)
    private Integer didAnabolicSteroid;
    @Description(description = "Did the individual drink wines")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didDrinkWines", allowNull = true)
    private Integer didDrinkWines;
    @Description(description = "Symptom 3 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom3Severity", allowNull = true)
    private Integer symptom3Severity;
    @Description(description = "How long was the individual in labour")
    @ExtensionIntegerConstraint(constraint = "survivedBeforeDeathConstraint", message = "Invalid Value for labourLength", allowNull = true)
    private Integer labourLength;
    @Description(description = "Did the deceased suffer from asthma")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for sufferFromAsthma", allowNull = true)
    private Integer sufferFromAsthma;
    @Description(description = "Specify the anti-malaria drug the individual received")
    private String whichAntiMalariaDrugOther;
    @Description(description = "How many days did the individual have paralysis of the lower limbs")
    private Integer haveParalysisLowerLimbsNumDays;
    @Description(description = "Cause 1 of death")
    private String causeOfDeath1;
    @Description(description = "How long did the individual have the mass in the abdomen")
    private Integer massInAbdomenDays;
    @Description(description = "How many days before her death did the individual deliver")
    private Integer daysBeforeDeathDelivery;
    @Description(description = "Specify how the individual committed suicide")
    private String howCommitSuicideOther;
    @Description(description = "Specify the occupation of the deceased individual")
    private String occupationOfDeceasedOther;
    @Description(description = "Date the individual used hospital facility 1.")
    @Temporal(TemporalType.DATE)
    @Past
    private Calendar hospitalFacility1Date;
    @Description(description = "Did the individual ever smoke anything else")
    private String didSmokeOther;
    @Description(description = "Cause 2 of death")
    private String causeOfDeath2;
    @Description(description = "Did the individual suffer from any other illness")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for sufferedOtherIllness", allowNull = true)
    private Integer sufferedOtherIllness;
    @Description(description = "Did the individual have yellow discoloration of the eye")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveYellowDiscoloration", allowNull = true)
    private Integer haveYellowDiscoloration;
    @Description(description = "Did the individual ever consume ecstasy")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didEcstasy", allowNull = true)
    private Integer didEcstasy;
    @Description(description = "Did the individual ever consume marijuana")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for didMarijuana", allowNull = true)
    private Integer didMarijuana;
    @Description(description = "Did the deceased suffer from hypertension")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for sufferFromHypertension", allowNull = true)
    private Integer sufferFromHypertension;
    @Description(description = "Age of deceased individual")
    private Integer ageOfDeceased;
    @Description(description = "Where did the individual die")
    @ExtensionIntegerConstraint(constraint = "whereDiedConstraint", message = "Invalid Value for whereDied", allowNull = true)
    private Integer whereDied;
    @Description(description = "What did the rash look like")
    @ExtensionIntegerConstraint(constraint = "rashLookLikeConstraint", message = "Invalid Value for rashLookLike", allowNull = true)
    private Integer rashLookLike;
    @Description(description = "Did the individual have a high fever during the pregnancy or after delivery")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveHighFeverDuringPregnancy", allowNull = true)
    private Integer haveHighFeverDuringPregnancy;
    @Description(description = "Symptom 1 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom1Severity", allowNull = true)
    private Integer symptom1Severity;
    @Description(description = "What was the other location in the abdomen of the mass")
    private String massInOtherLocation;
    @Description(description = "Do you know the cause of death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for causeOfDeath", allowNull = true)
    private Integer causeOfDeath;
    @Description(description = "Date the individual used hospital facility 2.")
    @Temporal(TemporalType.DATE)
    @Past
    private Calendar hospitalFacility2Date;
    @Description(description = "Did the individual have swelling of the neck")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for swellingOfNeck", allowNull = true)
    private Integer swellingOfNeck;
    @Description(description = "How many days was the individual unconscious")
    private Integer consciousnessDays;
    @Description(description = "Symptom 6 Duration reported by respondent")
    private Integer symptom6Duration;
    @Description(description = "How many days did the individual have stiffness")
    private Integer stiffnessNumDays;
    @Description(description = "Did the individual have heavy bleeding after the abortion")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveHeavyBleedingAfterAbortion", allowNull = true)
    private Integer haveHeavyBleedingAfterAbortion;
    @Description(description = "Did the individual have vomitting")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveVomitting", allowNull = true)
    private Integer haveVomitting;
    @Description(description = "Name of deceased individual.")
    private String nameOfDeceased;
    @Description(description = "Was the mass in the lower part of the abdomen")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for massInLowerAbdomen", allowNull = true)
    private Integer massInLowerAbdomen;
    @Description(description = "Which anti-malaria druge did the individual receive")
    @ExtensionIntegerConstraint(constraint = "whichAntiMalariaDrugConstraint", message = "Invalid Value for whichAntiMalariaDrug", allowNull = true)
    private Integer whichAntiMalariaDrug;
    @Description(description = "Was the individual unable to pass a stool due to abdominal pain")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for unableToPassStool", allowNull = true)
    private Integer unableToPassStool;
    @Description(description = "Interviewers comments and observations")
    private String interviewersComments;
    @Description(description = "How often did the individual drink alcohol")
    @ExtensionIntegerConstraint(constraint = "didDrinkAlcoholHowOftenConstraint", message = "Invalid Value for didDrinkAlcoholHowOften", allowNull = true)
    private Integer didDrinkAlcoholHowOften;
    @Description(description = "What kind of animal bite")
    @ExtensionIntegerConstraint(constraint = "animalBiteTypeConstraint", message = "Invalid Value for animalBiteType", allowNull = true)
    private Integer animalBiteType;
    @Description(description = "Did the individual have chest pain")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for haveChestPain", allowNull = true)
    private Integer haveChestPain;
    @Description(description = "Where did the individual have surgery")
    @ExtensionIntegerConstraint(constraint = "surgeryLocationConstraint", message = "Invalid Value for surgeryLocation", allowNull = true)
    private Integer surgeryLocation;
    @Description(description = "Was the abortion induced")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for abortionInduced", allowNull = true)
    private Integer abortionInduced;
    @Description(description = "Did the individual receive medical care from the accident before death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for receivedMedicalAttention", allowNull = true)
    private Integer receivedMedicalAttention;
    @Description(description = "How many days did the individual have swelling on their neck")
    private Integer swellingNeckDays;
    @Description(description = "How many days did the individual have swelling on their joints")
    private Integer swellingJointsDays;
    @Description(description = "Where did the individual deliver")
    @ExtensionIntegerConstraint(constraint = "deliveryLocationConstraint", message = "Invalid Value for deliveryLocation", allowNull = true)
    private Integer deliveryLocation;
    @Description(description = "Did the deceased suffer from leprosy")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for sufferFromLeprosy", allowNull = true)
    private Integer sufferFromLeprosy;
    @Description(description = "Was the individual pregnant at the time of death")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for pregnantAtDeath", allowNull = true)
    private Integer pregnantAtDeath;
    @Description(description = "Name of respondent of the verbal autopsy")
    private String nameOfRespondent;
    @Description(description = "Specify what the vomit looked like")
    private String vomitLookLikeOther;
    @Description(description = "Symptom 8 severity reported by respondent")
    @ExtensionIntegerConstraint(constraint = "symptomSeverityConstraint", message = "Invalid Value for symptom8Severity", allowNull = true)
    private Integer symptom8Severity;
    @Description(description = "Did the individual have distention of the abdomen")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowNAConstraint", message = "Invalid Value for distentionOfAbdomen", allowNull = true)
    private Integer distentionOfAbdomen;
    @Description(description = "Did the deceased suffer from other illnesses")
    @ExtensionIntegerConstraint(constraint = "yesNoDontKnowConstraint", message = "Invalid Value for sufferFromOtherIllness", allowNull = true)
    private Integer sufferFromOtherIllness;
    @Description(description = "Specify the relationship of respondent to the deceased")
    private String relationshipOfRespondentOther;

    public Individual getIndividual() {
        return individual;
    }

    public void setIndividual(Individual indiv) {
        individual = indiv;
    }

    public Location getHouse() {
        return house;
    }

    public void setHouse(Location location) {
        house = location;
    }

    public Visit getVisit() {
        return visit;
    }

    public void setVisit(Visit vis) {
        visit = vis;
    }

    public String getHospitalFacility2Reason() {
        return hospitalFacility2Reason;
    }

    public void setHospitalFacility2Reason(String data) {
        hospitalFacility2Reason = data;
    }

    public Integer getSwellingAnkleDays() {
        return swellingAnkleDays;
    }

    public void setSwellingAnkleDays(Integer data) {
        swellingAnkleDays = data;
    }

    public Integer getHavePreviousComplicatedDelivery() {
        return havePreviousComplicatedDelivery;
    }

    public void setHavePreviousComplicatedDelivery(Integer data) {
        havePreviousComplicatedDelivery = data;
    }

    public Integer getMaritalStatusOfDeceased() {
        return maritalStatusOfDeceased;
    }

    public void setMaritalStatusOfDeceased(Integer data) {
        maritalStatusOfDeceased = data;
    }

    public String getDidPrescriptionDrugType() {
        return didPrescriptionDrugType;
    }

    public void setDidPrescriptionDrugType(String data) {
        didPrescriptionDrugType = data;
    }

    public Integer getHaveShortnessOfBreathDays() {
        return haveShortnessOfBreathDays;
    }

    public void setHaveShortnessOfBreathDays(Integer data) {
        haveShortnessOfBreathDays = data;
    }

    public Integer getHaveDiarrhoeaDays() {
        return haveDiarrhoeaDays;
    }

    public void setHaveDiarrhoeaDays(Integer data) {
        haveDiarrhoeaDays = data;
    }

    public Integer getSufferFromEpilepsy() {
        return sufferFromEpilepsy;
    }

    public void setSufferFromEpilepsy(Integer data) {
        sufferFromEpilepsy = data;
    }

    public Integer getHaveChills() {
        return haveChills;
    }

    public void setHaveChills(Integer data) {
        haveChills = data;
    }

    public Integer getConsciousnessStart() {
        return consciousnessStart;
    }

    public void setConsciousnessStart(Integer data) {
        consciousnessStart = data;
    }

    public Integer getDidHeroin() {
        return didHeroin;
    }

    public void setDidHeroin(Integer data) {
        didHeroin = data;
    }

    public Integer getSymptom7Duration() {
        return symptom7Duration;
    }

    public void setSymptom7Duration(Integer data) {
        symptom7Duration = data;
    }

    public Integer getAbdominalPainType() {
        return abdominalPainType;
    }

    public void setAbdominalPainType(Integer data) {
        abdominalPainType = data;
    }

    public String getConsciousnessLevelOther() {
        return consciousnessLevelOther;
    }

    public void setConsciousnessLevelOther(String data) {
        consciousnessLevelOther = data;
    }

    public Integer getSufferFromDiabetes() {
        return sufferFromDiabetes;
    }

    public void setSufferFromDiabetes(Integer data) {
        sufferFromDiabetes = data;
    }

    public String getAbdominalPainTypeOther() {
        return abdominalPainTypeOther;
    }

    public void setAbdominalPainTypeOther(String data) {
        abdominalPainTypeOther = data;
    }

    public Integer getSwellingFaceDays() {
        return swellingFaceDays;
    }

    public void setSwellingFaceDays(Integer data) {
        swellingFaceDays = data;
    }

    public Integer getHaveParalysisLowerLimbs() {
        return haveParalysisLowerLimbs;
    }

    public void setHaveParalysisLowerLimbs(Integer data) {
        haveParalysisLowerLimbs = data;
    }

    public Integer getDistentionOfAbdomenDays() {
        return distentionOfAbdomenDays;
    }

    public void setDistentionOfAbdomenDays(Integer data) {
        distentionOfAbdomenDays = data;
    }

    public Integer getChangeInUrinePassed() {
        return changeInUrinePassed;
    }

    public void setChangeInUrinePassed(Integer data) {
        changeInUrinePassed = data;
    }

    public Integer getSymptom9Severity() {
        return symptom9Severity;
    }

    public void setSymptom9Severity(Integer data) {
        symptom9Severity = data;
    }

    public Integer getDidDrinkAlcohol() {
        return didDrinkAlcohol;
    }

    public void setDidDrinkAlcohol(Integer data) {
        didDrinkAlcohol = data;
    }

    public String getHaveFever() {
        return haveFever;
    }

    public void setHaveFever(String data) {
        haveFever = data;
    }

    public Integer getCommittedSuicide() {
        return committedSuicide;
    }

    public void setCommittedSuicide(Integer data) {
        committedSuicide = data;
    }

    public Integer getSymptom8Duration() {
        return symptom8Duration;
    }

    public void setSymptom8Duration(Integer data) {
        symptom8Duration = data;
    }

    public Integer getSymptom3Duration() {
        return symptom3Duration;
    }

    public void setSymptom3Duration(Integer data) {
        symptom3Duration = data;
    }

    public Integer getRashOnTrunk() {
        return rashOnTrunk;
    }

    public void setRashOnTrunk(Integer data) {
        rashOnTrunk = data;
    }

    public Integer getSwallowingPainDays() {
        return swallowingPainDays;
    }

    public void setSwallowingPainDays(Integer data) {
        swallowingPainDays = data;
    }

    public Integer getDieFromInjuryOrAccident() {
        return dieFromInjuryOrAccident;
    }

    public void setDieFromInjuryOrAccident(Integer data) {
        dieFromInjuryOrAccident = data;
    }

    public Integer getChestPainLocationSternum() {
        return chestPainLocationSternum;
    }

    public void setChestPainLocationSternum(Integer data) {
        chestPainLocationSternum = data;
    }

    public Integer getHowCommitSuicide() {
        return howCommitSuicide;
    }

    public void setHowCommitSuicide(Integer data) {
        howCommitSuicide = data;
    }

    public Integer getDiedAtAccident() {
        return diedAtAccident;
    }

    public void setDiedAtAccident(Integer data) {
        diedAtAccident = data;
    }

    public Integer getSwellingGroinDays() {
        return swellingGroinDays;
    }

    public void setSwellingGroinDays(Integer data) {
        swellingGroinDays = data;
    }

    public Integer getHighestLvlOfEducationOfDeceased() {
        return highestLvlOfEducationOfDeceased;
    }

    public void setHighestLvlOfEducationOfDeceased(Integer data) {
        highestLvlOfEducationOfDeceased = data;
    }

    public String getRashLookLikeOther() {
        return rashLookLikeOther;
    }

    public void setRashLookLikeOther(String data) {
        rashLookLikeOther = data;
    }

    public Integer getLoseWeightHowLong() {
        return loseWeightHowLong;
    }

    public void setLoseWeightHowLong(Integer data) {
        loseWeightHowLong = data;
    }

    public Integer getDidDrinkIllicitBrews() {
        return didDrinkIllicitBrews;
    }

    public void setDidDrinkIllicitBrews(Integer data) {
        didDrinkIllicitBrews = data;
    }

    public Integer getHaveObstructedLabour() {
        return haveObstructedLabour;
    }

    public void setHaveObstructedLabour(Integer data) {
        haveObstructedLabour = data;
    }

    public Integer getMassInUpperLeftAbdomen() {
        return massInUpperLeftAbdomen;
    }

    public void setMassInUpperLeftAbdomen(Integer data) {
        massInUpperLeftAbdomen = data;
    }

    public Integer getHaveAbdominalPain() {
        return haveAbdominalPain;
    }

    public void setHaveAbdominalPain(Integer data) {
        haveAbdominalPain = data;
    }

    public Integer getChangeInUrinePassedNumDays() {
        return changeInUrinePassedNumDays;
    }

    public void setChangeInUrinePassedNumDays(Integer data) {
        changeInUrinePassedNumDays = data;
    }

    public Integer getSymptom6Severity() {
        return symptom6Severity;
    }

    public void setSymptom6Severity(Integer data) {
        symptom6Severity = data;
    }

    @XmlJavaTypeAdapter(org.openhds.domain.util.CalendarAdapter.class)
    public Calendar getChildDob() {
        return childDob;
    }

    public void setChildDob(Calendar data) {
        childDob = data;
    }

    public Integer getDidInhalants() {
        return didInhalants;
    }

    public void setDidInhalants(Integer data) {
        didInhalants = data;
    }

    public Integer getSufferFromTB() {
        return sufferFromTB;
    }

    public void setSufferFromTB(Integer data) {
        sufferFromTB = data;
    }

    public Integer getAbdominalPainSeverity() {
        return abdominalPainSeverity;
    }

    public void setAbdominalPainSeverity(Integer data) {
        abdominalPainSeverity = data;
    }

    @XmlJavaTypeAdapter(org.openhds.domain.util.CalendarAdapter.class)
    public Calendar getHospitalFacility3Date() {
        return hospitalFacility3Date;
    }

    public void setHospitalFacility3Date(Calendar data) {
        hospitalFacility3Date = data;
    }

    public Integer getChestPainStart() {
        return chestPainStart;
    }

    public void setChestPainStart(Integer data) {
        chestPainStart = data;
    }

    public Integer getUrineColorNumDays() {
        return urineColorNumDays;
    }

    public void setUrineColorNumDays(Integer data) {
        urineColorNumDays = data;
    }

    public Integer getSwellingOfJoints() {
        return swellingOfJoints;
    }

    public void setSwellingOfJoints(Integer data) {
        swellingOfJoints = data;
    }

    public Integer getDidReceiveAntiMalariDrug() {
        return didReceiveAntiMalariDrug;
    }

    public void setDidReceiveAntiMalariDrug(Integer data) {
        didReceiveAntiMalariDrug = data;
    }

    public Integer getRashOnExtremities() {
        return rashOnExtremities;
    }

    public void setRashOnExtremities(Integer data) {
        rashOnExtremities = data;
    }

    public Integer getBabyBornAlive() {
        return babyBornAlive;
    }

    public void setBabyBornAlive(Integer data) {
        babyBornAlive = data;
    }

    public String getDeliveryLocationOther() {
        return deliveryLocationOther;
    }

    public void setDeliveryLocationOther(String data) {
        deliveryLocationOther = data;
    }

    public String getHospitalFacility3Reason() {
        return hospitalFacility3Reason;
    }

    public void setHospitalFacility3Reason(String data) {
        hospitalFacility3Reason = data;
    }

    public Integer getSwellingOfGroin() {
        return swellingOfGroin;
    }

    public void setSwellingOfGroin(Integer data) {
        swellingOfGroin = data;
    }

    public Integer getDidLSD() {
        return didLSD;
    }

    public void setDidLSD(Integer data) {
        didLSD = data;
    }

    public Integer getNeckPainLevel() {
        return neckPainLevel;
    }

    public void setNeckPainLevel(Integer data) {
        neckPainLevel = data;
    }

    public Integer getBabyHealthNow() {
        return babyHealthNow;
    }

    public void setBabyHealthNow(Integer data) {
        babyHealthNow = data;
    }

    public Integer getHaveFitsNumDays() {
        return haveFitsNumDays;
    }

    public void setHaveFitsNumDays(Integer data) {
        haveFitsNumDays = data;
    }

    public Integer getSurvivedBeforeDeath() {
        return survivedBeforeDeath;
    }

    public void setSurvivedBeforeDeath(Integer data) {
        survivedBeforeDeath = data;
    }

    public Integer getDistentionOfAbdomenDevelopment() {
        return distentionOfAbdomenDevelopment;
    }

    public void setDistentionOfAbdomenDevelopment(Integer data) {
        distentionOfAbdomenDevelopment = data;
    }

    public Integer getFeverContinuous() {
        return feverContinuous;
    }

    public void setFeverContinuous(Integer data) {
        feverContinuous = data;
    }

    public Integer getSymptom4Severity() {
        return symptom4Severity;
    }

    public void setSymptom4Severity(Integer data) {
        symptom4Severity = data;
    }

    public Integer getVomitLookLike() {
        return vomitLookLike;
    }

    public void setVomitLookLike(Integer data) {
        vomitLookLike = data;
    }

    public Integer getDidDrinkAlcoholLength() {
        return didDrinkAlcoholLength;
    }

    public void setDidDrinkAlcoholLength(Integer data) {
        didDrinkAlcoholLength = data;
    }

    public Integer getSufferFromCancer() {
        return sufferFromCancer;
    }

    public void setSufferFromCancer(Integer data) {
        sufferFromCancer = data;
    }

    public Integer getHaveSwellingInBreast() {
        return haveSwellingInBreast;
    }

    public void setHaveSwellingInBreast(Integer data) {
        haveSwellingInBreast = data;
    }

    public Integer getInjuryType() {
        return injuryType;
    }

    public void setInjuryType(Integer data) {
        injuryType = data;
    }

    public Integer getDidSmoke() {
        return didSmoke;
    }

    public void setDidSmoke(Integer data) {
        didSmoke = data;
    }

    public Integer getStiffnessOfWholeBodyDuringFits() {
        return stiffnessOfWholeBodyDuringFits;
    }

    public void setStiffnessOfWholeBodyDuringFits(Integer data) {
        stiffnessOfWholeBodyDuringFits = data;
    }

    public Integer getDeliverWithinSixWeeksBeforeDeath() {
        return deliverWithinSixWeeksBeforeDeath;
    }

    public void setDeliverWithinSixWeeksBeforeDeath(Integer data) {
        deliverWithinSixWeeksBeforeDeath = data;
    }

    public Integer getDidSmokeFiltered() {
        return didSmokeFiltered;
    }

    public void setDidSmokeFiltered(Integer data) {
        didSmokeFiltered = data;
    }

    public Integer getSputum() {
        return sputum;
    }

    public void setSputum(Integer data) {
        sputum = data;
    }

    public Integer getSexOfDeceased() {
        return sexOfDeceased;
    }

    public void setSexOfDeceased(Integer data) {
        sexOfDeceased = data;
    }

    public Integer getDidDrinkAlcoholToGetDrunk() {
        return didDrinkAlcoholToGetDrunk;
    }

    public void setDidDrinkAlcoholToGetDrunk(Integer data) {
        didDrinkAlcoholToGetDrunk = data;
    }

    public Integer getHaveSeizuresBeforeDeath() {
        return haveSeizuresBeforeDeath;
    }

    public void setHaveSeizuresBeforeDeath(Integer data) {
        haveSeizuresBeforeDeath = data;
    }

    public Integer getBloodInStool() {
        return bloodInStool;
    }

    public void setBloodInStool(Integer data) {
        bloodInStool = data;
    }

    public Integer getHaveShortnessOfBreath() {
        return haveShortnessOfBreath;
    }

    public void setHaveShortnessOfBreath(Integer data) {
        haveShortnessOfBreath = data;
    }

    public Integer getNeckPainDays() {
        return neckPainDays;
    }

    public void setNeckPainDays(Integer data) {
        neckPainDays = data;
    }

    public Integer getHaveUlcer() {
        return haveUlcer;
    }

    public void setHaveUlcer(Integer data) {
        haveUlcer = data;
    }

    public Integer getHaveCoughDays() {
        return haveCoughDays;
    }

    public void setHaveCoughDays(Integer data) {
        haveCoughDays = data;
    }

    public Integer getDidSmokeHowMuch() {
        return didSmokeHowMuch;
    }

    public void setDidSmokeHowMuch(Integer data) {
        didSmokeHowMuch = data;
    }

    public Integer getDiarrhoeaContinuous() {
        return diarrhoeaContinuous;
    }

    public void setDiarrhoeaContinuous(Integer data) {
        diarrhoeaContinuous = data;
    }

    public Integer getDidSmokeHowOften() {
        return didSmokeHowOften;
    }

    public void setDidSmokeHowOften(Integer data) {
        didSmokeHowOften = data;
    }

    public Integer getHaveParalysisNumDays() {
        return haveParalysisNumDays;
    }

    public void setHaveParalysisNumDays(Integer data) {
        haveParalysisNumDays = data;
    }

    public Integer getManagedDelivery() {
        return managedDelivery;
    }

    public void setManagedDelivery(Integer data) {
        managedDelivery = data;
    }

    public Integer getRelationshipOfRespondent() {
        return relationshipOfRespondent;
    }

    public void setRelationshipOfRespondent(Integer data) {
        relationshipOfRespondent = data;
    }

    @XmlJavaTypeAdapter(org.openhds.domain.util.CalendarAdapter.class)
    public Calendar getCertifiedCorrectDate() {
        return certifiedCorrectDate;
    }

    public void setCertifiedCorrectDate(Calendar data) {
        certifiedCorrectDate = data;
    }

    public String getAccidentTypeOther() {
        return accidentTypeOther;
    }

    public void setAccidentTypeOther(String data) {
        accidentTypeOther = data;
    }

    public Integer getSymptom9Duration() {
        return symptom9Duration;
    }

    public void setSymptom9Duration(Integer data) {
        symptom9Duration = data;
    }

    public Integer getChestPainActivity() {
        return chestPainActivity;
    }

    public void setChestPainActivity(Integer data) {
        chestPainActivity = data;
    }

    public Integer getHaveNoisyBreathing() {
        return haveNoisyBreathing;
    }

    public void setHaveNoisyBreathing(Integer data) {
        haveNoisyBreathing = data;
    }

    public Integer getHaveDiarrhoea() {
        return haveDiarrhoea;
    }

    public void setHaveDiarrhoea(Integer data) {
        haveDiarrhoea = data;
    }

    public Integer getHaveMassInAbdomen() {
        return haveMassInAbdomen;
    }

    public void setHaveMassInAbdomen(Integer data) {
        haveMassInAbdomen = data;
    }

    public Integer getSymptom7Severity() {
        return symptom7Severity;
    }

    public void setSymptom7Severity(Integer data) {
        symptom7Severity = data;
    }

    public String getDidOtherDrugs() {
        return didOtherDrugs;
    }

    public void setDidOtherDrugs(String data) {
        didOtherDrugs = data;
    }

    @XmlJavaTypeAdapter(org.openhds.domain.util.CalendarAdapter.class)
    public Calendar getDateOfInterview() {
        return dateOfInterview;
    }

    public void setDateOfInterview(Calendar data) {
        dateOfInterview = data;
    }

    public Integer getHaveTooMuchBleedingBeforeDelivery() {
        return haveTooMuchBleedingBeforeDelivery;
    }

    public void setHaveTooMuchBleedingBeforeDelivery(Integer data) {
        haveTooMuchBleedingBeforeDelivery = data;
    }

    public Integer getHaveVomittingDays() {
        return haveVomittingDays;
    }

    public void setHaveVomittingDays(Integer data) {
        haveVomittingDays = data;
    }

    public Integer getDifficultyPassingUrine() {
        return difficultyPassingUrine;
    }

    public void setDifficultyPassingUrine(Integer data) {
        difficultyPassingUrine = data;
    }

    public Integer getHaveSwallowingPain() {
        return haveSwallowingPain;
    }

    public void setHaveSwallowingPain(Integer data) {
        haveSwallowingPain = data;
    }

    public Integer getRashAllOverBody() {
        return rashAllOverBody;
    }

    public void setRashAllOverBody(Integer data) {
        rashAllOverBody = data;
    }

    public Integer getDifficultyPassingUrineSeverity() {
        return difficultyPassingUrineSeverity;
    }

    public void setDifficultyPassingUrineSeverity(Integer data) {
        difficultyPassingUrineSeverity = data;
    }

    public Integer getDidDrugsLength() {
        return didDrugsLength;
    }

    public void setDidDrugsLength(Integer data) {
        didDrugsLength = data;
    }

    public Integer getChestPainLocationOther() {
        return chestPainLocationOther;
    }

    public void setChestPainLocationOther(Integer data) {
        chestPainLocationOther = data;
    }

    public Integer getWeeksIll() {
        return weeksIll;
    }

    public void setWeeksIll(Integer data) {
        weeksIll = data;
    }

    public Integer getChangeInUrineColor() {
        return changeInUrineColor;
    }

    public void setChangeInUrineColor(Integer data) {
        changeInUrineColor = data;
    }

    public String getDidDrinkOther() {
        return didDrinkOther;
    }

    public void setDidDrinkOther(String data) {
        didDrinkOther = data;
    }

    public Integer getHaveCough() {
        return haveCough;
    }

    public void setHaveCough(Integer data) {
        haveCough = data;
    }

    public Integer getSymptom10Duration() {
        return symptom10Duration;
    }

    public void setSymptom10Duration(Integer data) {
        symptom10Duration = data;
    }

    public Integer getSymptom1Duration() {
        return symptom1Duration;
    }

    public void setSymptom1Duration(Integer data) {
        symptom1Duration = data;
    }

    public Integer getHaveVomittingSevereDays() {
        return haveVomittingSevereDays;
    }

    public void setHaveVomittingSevereDays(Integer data) {
        haveVomittingSevereDays = data;
    }

    public Integer getCoughBlood() {
        return coughBlood;
    }

    public void setCoughBlood(Integer data) {
        coughBlood = data;
    }

    public Integer getRashPeel() {
        return rashPeel;
    }

    public void setRashPeel(Integer data) {
        rashPeel = data;
    }

    public Integer getHaveAbortionBeforeDeath() {
        return haveAbortionBeforeDeath;
    }

    public void setHaveAbortionBeforeDeath(Integer data) {
        haveAbortionBeforeDeath = data;
    }

    public Integer getLoseWeightBeforeDeath() {
        return loseWeightBeforeDeath;
    }

    public void setLoseWeightBeforeDeath(Integer data) {
        loseWeightBeforeDeath = data;
    }

    public Integer getDidSmokeUnfiltered() {
        return didSmokeUnfiltered;
    }

    public void setDidSmokeUnfiltered(Integer data) {
        didSmokeUnfiltered = data;
    }

    public String getDifficultyPassingUrineSeverityOther() {
        return difficultyPassingUrineSeverityOther;
    }

    public void setDifficultyPassingUrineSeverityOther(String data) {
        difficultyPassingUrineSeverityOther = data;
    }

    public Integer getHaveAbdominalPainDays() {
        return haveAbdominalPainDays;
    }

    public void setHaveAbdominalPainDays(Integer data) {
        haveAbdominalPainDays = data;
    }

    public Integer getFeverDays() {
        return feverDays;
    }

    public void setFeverDays(Integer data) {
        feverDays = data;
    }

    public Integer getYearsIll() {
        return yearsIll;
    }

    public void setYearsIll(Integer data) {
        yearsIll = data;
    }

    public String getSurgeryLocationOther() {
        return surgeryLocationOther;
    }

    public void setSurgeryLocationOther(String data) {
        surgeryLocationOther = data;
    }

    public Integer getSymptom4Duration() {
        return symptom4Duration;
    }

    public void setSymptom4Duration(Integer data) {
        symptom4Duration = data;
    }

    public Integer getHaveSurgery() {
        return haveSurgery;
    }

    public void setHaveSurgery(Integer data) {
        haveSurgery = data;
    }

    public Integer getChestPainLocationHeart() {
        return chestPainLocationHeart;
    }

    public void setChestPainLocationHeart(Integer data) {
        chestPainLocationHeart = data;
    }

    public Integer getChronicIllnessBeforeAccident() {
        return chronicIllnessBeforeAccident;
    }

    public void setChronicIllnessBeforeAccident(Integer data) {
        chronicIllnessBeforeAccident = data;
    }

    public Integer getSwellingAroundAnkle() {
        return swellingAroundAnkle;
    }

    public void setSwellingAroundAnkle(Integer data) {
        swellingAroundAnkle = data;
    }

    public Integer getDidCocaine() {
        return didCocaine;
    }

    public void setDidCocaine(Integer data) {
        didCocaine = data;
    }

    public Integer getHaveRedEyes() {
        return haveRedEyes;
    }

    public void setHaveRedEyes(Integer data) {
        haveRedEyes = data;
    }

    public String getSymptom10() {
        return symptom10;
    }

    public void setSymptom10(String data) {
        symptom10 = data;
    }

    public String getCorrectedBy() {
        return correctedBy;
    }

    public void setCorrectedBy(String data) {
        correctedBy = data;
    }

    public Integer getDidSmokePipe() {
        return didSmokePipe;
    }

    public void setDidSmokePipe(Integer data) {
        didSmokePipe = data;
    }

    public String getWhereDiedOther() {
        return whereDiedOther;
    }

    public void setWhereDiedOther(String data) {
        whereDiedOther = data;
    }

    public Integer getDidDrinkBeer() {
        return didDrinkBeer;
    }

    public void setDidDrinkBeer(Integer data) {
        didDrinkBeer = data;
    }

    public Integer getHaveDifficultyDeliveringPlacenta() {
        return haveDifficultyDeliveringPlacenta;
    }

    public void setHaveDifficultyDeliveringPlacenta(Integer data) {
        haveDifficultyDeliveringPlacenta = data;
    }

    public Integer getFitsAwareness() {
        return fitsAwareness;
    }

    public void setFitsAwareness(Integer data) {
        fitsAwareness = data;
    }

    public Integer getNumMonthsPregnant() {
        return numMonthsPregnant;
    }

    public void setNumMonthsPregnant(Integer data) {
        numMonthsPregnant = data;
    }

    public Integer getSwellingOfArmpit() {
        return swellingOfArmpit;
    }

    public void setSwellingOfArmpit(Integer data) {
        swellingOfArmpit = data;
    }

    public Integer getDidSmokeLength() {
        return didSmokeLength;
    }

    public void setDidSmokeLength(Integer data) {
        didSmokeLength = data;
    }

    public Integer getHaveHeadache() {
        return haveHeadache;
    }

    public void setHaveHeadache(Integer data) {
        haveHeadache = data;
    }

    public Integer getHaveParalysis() {
        return haveParalysis;
    }

    public void setHaveParalysis(Integer data) {
        haveParalysis = data;
    }

    public Integer getRashDays() {
        return rashDays;
    }

    public void setRashDays(Integer data) {
        rashDays = data;
    }

    public Integer getAccidentType() {
        return accidentType;
    }

    public void setAccidentType(Integer data) {
        accidentType = data;
    }

    public Integer getDidReceiveDrug() {
        return didReceiveDrug;
    }

    public void setDidReceiveDrug(Integer data) {
        didReceiveDrug = data;
    }

    public Integer getFitsOpeningMouth() {
        return fitsOpeningMouth;
    }

    public void setFitsOpeningMouth(Integer data) {
        fitsOpeningMouth = data;
    }

    public Integer getDidDrinkBrews() {
        return didDrinkBrews;
    }

    public void setDidDrinkBrews(Integer data) {
        didDrinkBrews = data;
    }

    public String getAboutIllness() {
        return aboutIllness;
    }

    public void setAboutIllness(String data) {
        aboutIllness = data;
    }

    public Integer getHaveFitsMostFreqNumDays() {
        return haveFitsMostFreqNumDays;
    }

    public void setHaveFitsMostFreqNumDays(Integer data) {
        haveFitsMostFreqNumDays = data;
    }

    public Integer getHaveTooMuchBleedingAfterDelivery() {
        return haveTooMuchBleedingAfterDelivery;
    }

    public void setHaveTooMuchBleedingAfterDelivery(Integer data) {
        haveTooMuchBleedingAfterDelivery = data;
    }

    public String getRashOther() {
        return rashOther;
    }

    public void setRashOther(String data) {
        rashOther = data;
    }

    public Integer getChangeInConsciousness() {
        return changeInConsciousness;
    }

    public void setChangeInConsciousness(Integer data) {
        changeInConsciousness = data;
    }

    public Integer getSufferFromHIV() {
        return sufferFromHIV;
    }

    public void setSufferFromHIV(Integer data) {
        sufferFromHIV = data;
    }

    public Integer getDeliveryMode() {
        return deliveryMode;
    }

    public void setDeliveryMode(Integer data) {
        deliveryMode = data;
    }

    public Integer getPinsNeedlesInFeet() {
        return pinsNeedlesInFeet;
    }

    public void setPinsNeedlesInFeet(Integer data) {
        pinsNeedlesInFeet = data;
    }

    public Integer getUrinePassedAmount() {
        return urinePassedAmount;
    }

    public void setUrinePassedAmount(Integer data) {
        urinePassedAmount = data;
    }

    public String getHospitalFacility1Reason() {
        return hospitalFacility1Reason;
    }

    public void setHospitalFacility1Reason(String data) {
        hospitalFacility1Reason = data;
    }

    public String getSymptom9() {
        return symptom9;
    }

    public void setSymptom9(String data) {
        symptom9 = data;
    }

    public Integer getConsciousnessLevel() {
        return consciousnessLevel;
    }

    public void setConsciousnessLevel(Integer data) {
        consciousnessLevel = data;
    }

    public String getSymptom8() {
        return symptom8;
    }

    public void setSymptom8(String data) {
        symptom8 = data;
    }

    public String getSymptom7() {
        return symptom7;
    }

    public void setSymptom7(String data) {
        symptom7 = data;
    }

    public String getHaveUlcerLocation() {
        return haveUlcerLocation;
    }

    public void setHaveUlcerLocation(String data) {
        haveUlcerLocation = data;
    }

    public String getSymptom6() {
        return symptom6;
    }

    public void setSymptom6(String data) {
        symptom6 = data;
    }

    public String getSymptom5() {
        return symptom5;
    }

    public void setSymptom5(String data) {
        symptom5 = data;
    }

    public String getSymptom4() {
        return symptom4;
    }

    public void setSymptom4(String data) {
        symptom4 = data;
    }

    public Integer getChestPainLocationRibs() {
        return chestPainLocationRibs;
    }

    public void setChestPainLocationRibs(Integer data) {
        chestPainLocationRibs = data;
    }

    public Integer getSymptom2Severity() {
        return symptom2Severity;
    }

    public void setSymptom2Severity(Integer data) {
        symptom2Severity = data;
    }

    public String getSymptom3() {
        return symptom3;
    }

    public void setSymptom3(String data) {
        symptom3 = data;
    }

    public String getSymptom2() {
        return symptom2;
    }

    public void setSymptom2(String data) {
        symptom2 = data;
    }

    public String getSymptom1() {
        return symptom1;
    }

    public void setSymptom1(String data) {
        symptom1 = data;
    }

    public String getManagedDeliveryOther() {
        return managedDeliveryOther;
    }

    public void setManagedDeliveryOther(String data) {
        managedDeliveryOther = data;
    }

    public Integer getPuffinessOfFace() {
        return puffinessOfFace;
    }

    public void setPuffinessOfFace(Integer data) {
        puffinessOfFace = data;
    }

    public Integer getOccupationOfDeceased() {
        return occupationOfDeceased;
    }

    public void setOccupationOfDeceased(Integer data) {
        occupationOfDeceased = data;
    }

    public Integer getLookEndOfLife() {
        return lookEndOfLife;
    }

    public void setLookEndOfLife(Integer data) {
        lookEndOfLife = data;
    }

    public Integer getSwellingArmpitDays() {
        return swellingArmpitDays;
    }

    public void setSwellingArmpitDays(Integer data) {
        swellingArmpitDays = data;
    }

    public Integer getLoseWeightSeverity() {
        return loseWeightSeverity;
    }

    public void setLoseWeightSeverity(Integer data) {
        loseWeightSeverity = data;
    }

    public Integer getFeverSevere() {
        return feverSevere;
    }

    public void setFeverSevere(Integer data) {
        feverSevere = data;
    }

    public Integer getStoolDays() {
        return stoolDays;
    }

    public void setStoolDays(Integer data) {
        stoolDays = data;
    }

    public Integer getDidSmokeCigar() {
        return didSmokeCigar;
    }

    public void setDidSmokeCigar(Integer data) {
        didSmokeCigar = data;
    }

    public Integer getSymptom5Duration() {
        return symptom5Duration;
    }

    public void setSymptom5Duration(Integer data) {
        symptom5Duration = data;
    }

    public Integer getDidDrugs() {
        return didDrugs;
    }

    public void setDidDrugs(Integer data) {
        didDrugs = data;
    }

    public Integer getBleedingFromOpenings() {
        return bleedingFromOpenings;
    }

    public void setBleedingFromOpenings(Integer data) {
        bleedingFromOpenings = data;
    }

    public Integer getMassInUpperRightAbdomen() {
        return massInUpperRightAbdomen;
    }

    public void setMassInUpperRightAbdomen(Integer data) {
        massInUpperRightAbdomen = data;
    }

    public Integer getHaveFits() {
        return haveFits;
    }

    public void setHaveFits(Integer data) {
        haveFits = data;
    }

    public Integer getEducationOfRespondent() {
        return educationOfRespondent;
    }

    public void setEducationOfRespondent(Integer data) {
        educationOfRespondent = data;
    }

    public Integer getDidDrugsToGetHigh() {
        return didDrugsToGetHigh;
    }

    public void setDidDrugsToGetHigh(Integer data) {
        didDrugsToGetHigh = data;
    }

    public String getAbdominalPainLocation() {
        return abdominalPainLocation;
    }

    public void setAbdominalPainLocation(String data) {
        abdominalPainLocation = data;
    }

    public Integer getParalysisDevelopment() {
        return paralysisDevelopment;
    }

    public void setParalysisDevelopment(Integer data) {
        paralysisDevelopment = data;
    }

    public Integer getHaveAbortionBeforeDeathNumDays() {
        return haveAbortionBeforeDeathNumDays;
    }

    public void setHaveAbortionBeforeDeathNumDays(Integer data) {
        haveAbortionBeforeDeathNumDays = data;
    }

    public Integer getChestPainLength() {
        return chestPainLength;
    }

    public void setChestPainLength(Integer data) {
        chestPainLength = data;
    }

    public Integer getChestPainResting() {
        return chestPainResting;
    }

    public void setChestPainResting(Integer data) {
        chestPainResting = data;
    }

    public Integer getDidReceiveAntibiotics() {
        return didReceiveAntibiotics;
    }

    public void setDidReceiveAntibiotics(Integer data) {
        didReceiveAntibiotics = data;
    }

    public Integer getHaveSunkenEyes() {
        return haveSunkenEyes;
    }

    public void setHaveSunkenEyes(Integer data) {
        haveSunkenEyes = data;
    }

    public Integer getHaveItchingOfSkin() {
        return haveItchingOfSkin;
    }

    public void setHaveItchingOfSkin(Integer data) {
        haveItchingOfSkin = data;
    }

    public Integer getWhenCoughWorse() {
        return whenCoughWorse;
    }

    public void setWhenCoughWorse(Integer data) {
        whenCoughWorse = data;
    }

    public Integer getLookPale() {
        return lookPale;
    }

    public void setLookPale(Integer data) {
        lookPale = data;
    }

    public String getHouseNameOfDeceased() {
        return houseNameOfDeceased;
    }

    public void setHouseNameOfDeceased(String data) {
        houseNameOfDeceased = data;
    }

    public Integer getUrineColor() {
        return urineColor;
    }

    public void setUrineColor(Integer data) {
        urineColor = data;
    }

    public Integer getHaveNeckPain() {
        return haveNeckPain;
    }

    public void setHaveNeckPain(Integer data) {
        haveNeckPain = data;
    }

    public Integer getDaysIll() {
        return daysIll;
    }

    public void setDaysIll(Integer data) {
        daysIll = data;
    }

    public Integer getSymptom2Duration() {
        return symptom2Duration;
    }

    public void setSymptom2Duration(Integer data) {
        symptom2Duration = data;
    }

    public Integer getSufferFromHeartDisease() {
        return sufferFromHeartDisease;
    }

    public void setSufferFromHeartDisease(Integer data) {
        sufferFromHeartDisease = data;
    }

    public Integer getDidDrinkSpirits() {
        return didDrinkSpirits;
    }

    public void setDidDrinkSpirits(Integer data) {
        didDrinkSpirits = data;
    }

    public Integer getSymptom5Severity() {
        return symptom5Severity;
    }

    public void setSymptom5Severity(Integer data) {
        symptom5Severity = data;
    }

    public Integer getHaveHighFeverAfterAbortion() {
        return haveHighFeverAfterAbortion;
    }

    public void setHaveHighFeverAfterAbortion(Integer data) {
        haveHighFeverAfterAbortion = data;
    }

    public Integer getHaveSurgeryNumDays() {
        return haveSurgeryNumDays;
    }

    public void setHaveSurgeryNumDays(Integer data) {
        haveSurgeryNumDays = data;
    }

    public Integer getStoolConsistency() {
        return stoolConsistency;
    }

    public void setStoolConsistency(Integer data) {
        stoolConsistency = data;
    }

    public Integer getHaveRash() {
        return haveRash;
    }

    public void setHaveRash(Integer data) {
        haveRash = data;
    }

    public Integer getDidPrescriptionDrugs() {
        return didPrescriptionDrugs;
    }

    public void setDidPrescriptionDrugs(Integer data) {
        didPrescriptionDrugs = data;
    }

    public Integer getHaveNightSweats() {
        return haveNightSweats;
    }

    public void setHaveNightSweats(Integer data) {
        haveNightSweats = data;
    }

    public Integer getChestPalpitation() {
        return chestPalpitation;
    }

    public void setChestPalpitation(Integer data) {
        chestPalpitation = data;
    }

    public String getHospitalFacility3() {
        return hospitalFacility3;
    }

    public void setHospitalFacility3(String data) {
        hospitalFacility3 = data;
    }

    public String getHospitalFacility1() {
        return hospitalFacility1;
    }

    public void setHospitalFacility1(String data) {
        hospitalFacility1 = data;
    }

    public String getConsciousnessStartOther() {
        return consciousnessStartOther;
    }

    public void setConsciousnessStartOther(String data) {
        consciousnessStartOther = data;
    }

    public String getHospitalFacility2() {
        return hospitalFacility2;
    }

    public void setHospitalFacility2(String data) {
        hospitalFacility2 = data;
    }

    public Integer getSymptom10Severity() {
        return symptom10Severity;
    }

    public void setSymptom10Severity(Integer data) {
        symptom10Severity = data;
    }

    public Integer getRashOnFace() {
        return rashOnFace;
    }

    public void setRashOnFace(Integer data) {
        rashOnFace = data;
    }

    public Integer getDidAnabolicSteroid() {
        return didAnabolicSteroid;
    }

    public void setDidAnabolicSteroid(Integer data) {
        didAnabolicSteroid = data;
    }

    public Integer getDidDrinkWines() {
        return didDrinkWines;
    }

    public void setDidDrinkWines(Integer data) {
        didDrinkWines = data;
    }

    public Integer getSymptom3Severity() {
        return symptom3Severity;
    }

    public void setSymptom3Severity(Integer data) {
        symptom3Severity = data;
    }

    public Integer getLabourLength() {
        return labourLength;
    }

    public void setLabourLength(Integer data) {
        labourLength = data;
    }

    public Integer getSufferFromAsthma() {
        return sufferFromAsthma;
    }

    public void setSufferFromAsthma(Integer data) {
        sufferFromAsthma = data;
    }

    public String getWhichAntiMalariaDrugOther() {
        return whichAntiMalariaDrugOther;
    }

    public void setWhichAntiMalariaDrugOther(String data) {
        whichAntiMalariaDrugOther = data;
    }

    public Integer getHaveParalysisLowerLimbsNumDays() {
        return haveParalysisLowerLimbsNumDays;
    }

    public void setHaveParalysisLowerLimbsNumDays(Integer data) {
        haveParalysisLowerLimbsNumDays = data;
    }

    public String getCauseOfDeath1() {
        return causeOfDeath1;
    }

    public void setCauseOfDeath1(String data) {
        causeOfDeath1 = data;
    }

    public Integer getMassInAbdomenDays() {
        return massInAbdomenDays;
    }

    public void setMassInAbdomenDays(Integer data) {
        massInAbdomenDays = data;
    }

    public Integer getDaysBeforeDeathDelivery() {
        return daysBeforeDeathDelivery;
    }

    public void setDaysBeforeDeathDelivery(Integer data) {
        daysBeforeDeathDelivery = data;
    }

    public String getHowCommitSuicideOther() {
        return howCommitSuicideOther;
    }

    public void setHowCommitSuicideOther(String data) {
        howCommitSuicideOther = data;
    }

    public String getOccupationOfDeceasedOther() {
        return occupationOfDeceasedOther;
    }

    public void setOccupationOfDeceasedOther(String data) {
        occupationOfDeceasedOther = data;
    }

    @XmlJavaTypeAdapter(org.openhds.domain.util.CalendarAdapter.class)
    public Calendar getHospitalFacility1Date() {
        return hospitalFacility1Date;
    }

    public void setHospitalFacility1Date(Calendar data) {
        hospitalFacility1Date = data;
    }

    public String getDidSmokeOther() {
        return didSmokeOther;
    }

    public void setDidSmokeOther(String data) {
        didSmokeOther = data;
    }

    public String getCauseOfDeath2() {
        return causeOfDeath2;
    }

    public void setCauseOfDeath2(String data) {
        causeOfDeath2 = data;
    }

    public Integer getSufferedOtherIllness() {
        return sufferedOtherIllness;
    }

    public void setSufferedOtherIllness(Integer data) {
        sufferedOtherIllness = data;
    }

    public Integer getHaveYellowDiscoloration() {
        return haveYellowDiscoloration;
    }

    public void setHaveYellowDiscoloration(Integer data) {
        haveYellowDiscoloration = data;
    }

    public Integer getDidEcstasy() {
        return didEcstasy;
    }

    public void setDidEcstasy(Integer data) {
        didEcstasy = data;
    }

    public Integer getDidMarijuana() {
        return didMarijuana;
    }

    public void setDidMarijuana(Integer data) {
        didMarijuana = data;
    }

    public Integer getSufferFromHypertension() {
        return sufferFromHypertension;
    }

    public void setSufferFromHypertension(Integer data) {
        sufferFromHypertension = data;
    }

    public Integer getAgeOfDeceased() {
        return ageOfDeceased;
    }

    public void setAgeOfDeceased(Integer data) {
        ageOfDeceased = data;
    }

    public Integer getWhereDied() {
        return whereDied;
    }

    public void setWhereDied(Integer data) {
        whereDied = data;
    }

    public Integer getRashLookLike() {
        return rashLookLike;
    }

    public void setRashLookLike(Integer data) {
        rashLookLike = data;
    }

    public Integer getHaveHighFeverDuringPregnancy() {
        return haveHighFeverDuringPregnancy;
    }

    public void setHaveHighFeverDuringPregnancy(Integer data) {
        haveHighFeverDuringPregnancy = data;
    }

    public Integer getSymptom1Severity() {
        return symptom1Severity;
    }

    public void setSymptom1Severity(Integer data) {
        symptom1Severity = data;
    }

    public String getMassInOtherLocation() {
        return massInOtherLocation;
    }

    public void setMassInOtherLocation(String data) {
        massInOtherLocation = data;
    }

    public Integer getCauseOfDeath() {
        return causeOfDeath;
    }

    public void setCauseOfDeath(Integer data) {
        causeOfDeath = data;
    }

    @XmlJavaTypeAdapter(org.openhds.domain.util.CalendarAdapter.class)
    public Calendar getHospitalFacility2Date() {
        return hospitalFacility2Date;
    }

    public void setHospitalFacility2Date(Calendar data) {
        hospitalFacility2Date = data;
    }

    public Integer getSwellingOfNeck() {
        return swellingOfNeck;
    }

    public void setSwellingOfNeck(Integer data) {
        swellingOfNeck = data;
    }

    public Integer getConsciousnessDays() {
        return consciousnessDays;
    }

    public void setConsciousnessDays(Integer data) {
        consciousnessDays = data;
    }

    public Integer getSymptom6Duration() {
        return symptom6Duration;
    }

    public void setSymptom6Duration(Integer data) {
        symptom6Duration = data;
    }

    public Integer getStiffnessNumDays() {
        return stiffnessNumDays;
    }

    public void setStiffnessNumDays(Integer data) {
        stiffnessNumDays = data;
    }

    public Integer getHaveHeavyBleedingAfterAbortion() {
        return haveHeavyBleedingAfterAbortion;
    }

    public void setHaveHeavyBleedingAfterAbortion(Integer data) {
        haveHeavyBleedingAfterAbortion = data;
    }

    public Integer getHaveVomitting() {
        return haveVomitting;
    }

    public void setHaveVomitting(Integer data) {
        haveVomitting = data;
    }

    public String getNameOfDeceased() {
        return nameOfDeceased;
    }

    public void setNameOfDeceased(String data) {
        nameOfDeceased = data;
    }

    public Integer getMassInLowerAbdomen() {
        return massInLowerAbdomen;
    }

    public void setMassInLowerAbdomen(Integer data) {
        massInLowerAbdomen = data;
    }

    public Integer getWhichAntiMalariaDrug() {
        return whichAntiMalariaDrug;
    }

    public void setWhichAntiMalariaDrug(Integer data) {
        whichAntiMalariaDrug = data;
    }

    public Integer getUnableToPassStool() {
        return unableToPassStool;
    }

    public void setUnableToPassStool(Integer data) {
        unableToPassStool = data;
    }

    public String getInterviewersComments() {
        return interviewersComments;
    }

    public void setInterviewersComments(String data) {
        interviewersComments = data;
    }

    public Integer getDidDrinkAlcoholHowOften() {
        return didDrinkAlcoholHowOften;
    }

    public void setDidDrinkAlcoholHowOften(Integer data) {
        didDrinkAlcoholHowOften = data;
    }

    public Integer getAnimalBiteType() {
        return animalBiteType;
    }

    public void setAnimalBiteType(Integer data) {
        animalBiteType = data;
    }

    public Integer getHaveChestPain() {
        return haveChestPain;
    }

    public void setHaveChestPain(Integer data) {
        haveChestPain = data;
    }

    public Integer getSurgeryLocation() {
        return surgeryLocation;
    }

    public void setSurgeryLocation(Integer data) {
        surgeryLocation = data;
    }

    public Integer getAbortionInduced() {
        return abortionInduced;
    }

    public void setAbortionInduced(Integer data) {
        abortionInduced = data;
    }

    public Integer getReceivedMedicalAttention() {
        return receivedMedicalAttention;
    }

    public void setReceivedMedicalAttention(Integer data) {
        receivedMedicalAttention = data;
    }

    public Integer getSwellingNeckDays() {
        return swellingNeckDays;
    }

    public void setSwellingNeckDays(Integer data) {
        swellingNeckDays = data;
    }

    public Integer getSwellingJointsDays() {
        return swellingJointsDays;
    }

    public void setSwellingJointsDays(Integer data) {
        swellingJointsDays = data;
    }

    public Integer getDeliveryLocation() {
        return deliveryLocation;
    }

    public void setDeliveryLocation(Integer data) {
        deliveryLocation = data;
    }

    public Integer getSufferFromLeprosy() {
        return sufferFromLeprosy;
    }

    public void setSufferFromLeprosy(Integer data) {
        sufferFromLeprosy = data;
    }

    public Integer getPregnantAtDeath() {
        return pregnantAtDeath;
    }

    public void setPregnantAtDeath(Integer data) {
        pregnantAtDeath = data;
    }

    public String getNameOfRespondent() {
        return nameOfRespondent;
    }

    public void setNameOfRespondent(String data) {
        nameOfRespondent = data;
    }

    public String getVomitLookLikeOther() {
        return vomitLookLikeOther;
    }

    public void setVomitLookLikeOther(String data) {
        vomitLookLikeOther = data;
    }

    public Integer getSymptom8Severity() {
        return symptom8Severity;
    }

    public void setSymptom8Severity(Integer data) {
        symptom8Severity = data;
    }

    public Integer getDistentionOfAbdomen() {
        return distentionOfAbdomen;
    }

    public void setDistentionOfAbdomen(Integer data) {
        distentionOfAbdomen = data;
    }

    public Integer getSufferFromOtherIllness() {
        return sufferFromOtherIllness;
    }

    public void setSufferFromOtherIllness(Integer data) {
        sufferFromOtherIllness = data;
    }

    public String getRelationshipOfRespondentOther() {
        return relationshipOfRespondentOther;
    }

    public void setRelationshipOfRespondentOther(String data) {
        relationshipOfRespondentOther = data;
    }

}
